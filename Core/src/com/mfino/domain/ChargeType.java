package com.mfino.domain;

// Generated Sep 27, 2016 2:09:23 PM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * ChargeType generated by hbm2java
 */
@Entity
@Table(name = "CHARGE_TYPE", uniqueConstraints = @UniqueConstraint(columnNames = "NAME"))
public class ChargeType implements java.io.Serializable {

	private BigDecimal id;
	private long version;
	private MfinoServiceProvider mfinoServiceProvider;
	private Serializable lastupdatetime;
	private String updatedby;
	private Serializable createtime;
	private String createdby;
	private String name;
	private String description;
	private Set<ChargeDefinition> chargeDefinitionsForDependantchargetypeid = new HashSet<ChargeDefinition>(
			0);
	private Set<ChargeDefinition> chargeDefinitionsForChargetypeid = new HashSet<ChargeDefinition>(
			0);
	private Set<TransactionCharge> transactionCharges = new HashSet<TransactionCharge>(
			0);

	public ChargeType() {
	}

	public ChargeType(BigDecimal id, MfinoServiceProvider mfinoServiceProvider,
			Serializable lastupdatetime, String updatedby,
			Serializable createtime, String createdby, String name) {
		this.id = id;
		this.mfinoServiceProvider = mfinoServiceProvider;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
		this.name = name;
	}

	public ChargeType(BigDecimal id, MfinoServiceProvider mfinoServiceProvider,
			Serializable lastupdatetime, String updatedby,
			Serializable createtime, String createdby, String name,
			String description,
			Set<ChargeDefinition> chargeDefinitionsForDependantchargetypeid,
			Set<ChargeDefinition> chargeDefinitionsForChargetypeid,
			Set<TransactionCharge> transactionCharges) {
		this.id = id;
		this.mfinoServiceProvider = mfinoServiceProvider;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
		this.name = name;
		this.description = description;
		this.chargeDefinitionsForDependantchargetypeid = chargeDefinitionsForDependantchargetypeid;
		this.chargeDefinitionsForChargetypeid = chargeDefinitionsForChargetypeid;
		this.transactionCharges = transactionCharges;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false, precision = 10, scale = 0)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MSPID", nullable = false)
	public MfinoServiceProvider getMfinoServiceProvider() {
		return this.mfinoServiceProvider;
	}

	public void setMfinoServiceProvider(
			MfinoServiceProvider mfinoServiceProvider) {
		this.mfinoServiceProvider = mfinoServiceProvider;
	}

	@Column(name = "LASTUPDATETIME", nullable = false)
	public Serializable getLastupdatetime() {
		return this.lastupdatetime;
	}

	public void setLastupdatetime(Serializable lastupdatetime) {
		this.lastupdatetime = lastupdatetime;
	}

	@Column(name = "UPDATEDBY", nullable = false, length = 1020)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Column(name = "CREATETIME", nullable = false)
	public Serializable getCreatetime() {
		return this.createtime;
	}

	public void setCreatetime(Serializable createtime) {
		this.createtime = createtime;
	}

	@Column(name = "CREATEDBY", nullable = false, length = 1020)
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Column(name = "NAME", unique = true, nullable = false, length = 1020)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DESCRIPTION", length = 1020)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chargeTypeByDependantchargetypeid")
	public Set<ChargeDefinition> getChargeDefinitionsForDependantchargetypeid() {
		return this.chargeDefinitionsForDependantchargetypeid;
	}

	public void setChargeDefinitionsForDependantchargetypeid(
			Set<ChargeDefinition> chargeDefinitionsForDependantchargetypeid) {
		this.chargeDefinitionsForDependantchargetypeid = chargeDefinitionsForDependantchargetypeid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chargeTypeByChargetypeid")
	public Set<ChargeDefinition> getChargeDefinitionsForChargetypeid() {
		return this.chargeDefinitionsForChargetypeid;
	}

	public void setChargeDefinitionsForChargetypeid(
			Set<ChargeDefinition> chargeDefinitionsForChargetypeid) {
		this.chargeDefinitionsForChargetypeid = chargeDefinitionsForChargetypeid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chargeType")
	public Set<TransactionCharge> getTransactionCharges() {
		return this.transactionCharges;
	}

	public void setTransactionCharges(Set<TransactionCharge> transactionCharges) {
		this.transactionCharges = transactionCharges;
	}

}
