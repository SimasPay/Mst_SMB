package com.mfino.domain;

// Generated Sep 27, 2016 2:09:23 PM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;

/**
 * CreditCardTransaction generated by hbm2java
 */
@Entity
@Table(name = "CREDIT_CARD_TRANSACTION")
public class CreditCardTransaction implements java.io.Serializable {

	private BigDecimal id;
	private long version;
	private Pocket pocket;
	private Subscriber subscriber;
	private Company company;
	private Serializable lastupdatetime;
	private String updatedby;
	private Serializable createtime;
	private String createdby;
	private String description;
	private BigDecimal amount;
	private String paymentmethod;
	private String errcode;
	private String usercode;
	private String transstatus;
	private String currcode;
	private String eui;
	private String transactiondate;
	private Serializable nsiatranscompletiontime;
	private String transtype;
	private String isblacklisted;
	private Long fraudrisklevel;
	private BigDecimal fraudriskscore;
	private String exceedhighrisk;
	private String cardtype;
	private String cardnopartial;
	private String cardname;
	private String acquirerbank;
	private String bankrescode;
	private String bankresmsg;
	private String authid;
	private String bankreference;
	private String whitelistcard;
	private String operation;
	private String mdn;
	private BigDecimal transactionid;
	private BigDecimal billreferencenumber;
	private Long ccfailurereason;
	private String sessionid;
	private String ccbuckettype;
	private String sourceip;
	private Short paymentgatewayedu;
	private Short isvoid;
	private String voidby;
	private Set<PendingCommodityTransfer> pendingCommodityTransfers = new HashSet<PendingCommodityTransfer>(
			0);
	private Set<CommodityTransfer> commodityTransfers = new HashSet<CommodityTransfer>(
			0);

	public CreditCardTransaction() {
	}

	public CreditCardTransaction(BigDecimal id, Pocket pocket,
			Subscriber subscriber, Company company,
			Serializable lastupdatetime, String updatedby,
			Serializable createtime, String createdby) {
		this.id = id;
		this.pocket = pocket;
		this.subscriber = subscriber;
		this.company = company;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
	}

	public CreditCardTransaction(BigDecimal id, Pocket pocket,
			Subscriber subscriber, Company company,
			Serializable lastupdatetime, String updatedby,
			Serializable createtime, String createdby, String description,
			BigDecimal amount, String paymentmethod, String errcode,
			String usercode, String transstatus, String currcode, String eui,
			String transactiondate, Serializable nsiatranscompletiontime,
			String transtype, String isblacklisted, Long fraudrisklevel,
			BigDecimal fraudriskscore, String exceedhighrisk, String cardtype,
			String cardnopartial, String cardname, String acquirerbank,
			String bankrescode, String bankresmsg, String authid,
			String bankreference, String whitelistcard, String operation,
			String mdn, BigDecimal transactionid,
			BigDecimal billreferencenumber, Long ccfailurereason,
			String sessionid, String ccbuckettype, String sourceip,
			Short paymentgatewayedu, Short isvoid, String voidby,
			Set<PendingCommodityTransfer> pendingCommodityTransfers,
			Set<CommodityTransfer> commodityTransfers) {
		this.id = id;
		this.pocket = pocket;
		this.subscriber = subscriber;
		this.company = company;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
		this.description = description;
		this.amount = amount;
		this.paymentmethod = paymentmethod;
		this.errcode = errcode;
		this.usercode = usercode;
		this.transstatus = transstatus;
		this.currcode = currcode;
		this.eui = eui;
		this.transactiondate = transactiondate;
		this.nsiatranscompletiontime = nsiatranscompletiontime;
		this.transtype = transtype;
		this.isblacklisted = isblacklisted;
		this.fraudrisklevel = fraudrisklevel;
		this.fraudriskscore = fraudriskscore;
		this.exceedhighrisk = exceedhighrisk;
		this.cardtype = cardtype;
		this.cardnopartial = cardnopartial;
		this.cardname = cardname;
		this.acquirerbank = acquirerbank;
		this.bankrescode = bankrescode;
		this.bankresmsg = bankresmsg;
		this.authid = authid;
		this.bankreference = bankreference;
		this.whitelistcard = whitelistcard;
		this.operation = operation;
		this.mdn = mdn;
		this.transactionid = transactionid;
		this.billreferencenumber = billreferencenumber;
		this.ccfailurereason = ccfailurereason;
		this.sessionid = sessionid;
		this.ccbuckettype = ccbuckettype;
		this.sourceip = sourceip;
		this.paymentgatewayedu = paymentgatewayedu;
		this.isvoid = isvoid;
		this.voidby = voidby;
		this.pendingCommodityTransfers = pendingCommodityTransfers;
		this.commodityTransfers = commodityTransfers;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false, precision = 10, scale = 0)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "POCKETID", nullable = false)
	public Pocket getPocket() {
		return this.pocket;
	}

	public void setPocket(Pocket pocket) {
		this.pocket = pocket;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUBSCRIBERID", nullable = false)
	public Subscriber getSubscriber() {
		return this.subscriber;
	}

	public void setSubscriber(Subscriber subscriber) {
		this.subscriber = subscriber;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COMPANYID", nullable = false)
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@Column(name = "LASTUPDATETIME", nullable = false)
	public Serializable getLastupdatetime() {
		return this.lastupdatetime;
	}

	public void setLastupdatetime(Serializable lastupdatetime) {
		this.lastupdatetime = lastupdatetime;
	}

	@Column(name = "UPDATEDBY", nullable = false, length = 1020)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Column(name = "CREATETIME", nullable = false)
	public Serializable getCreatetime() {
		return this.createtime;
	}

	public void setCreatetime(Serializable createtime) {
		this.createtime = createtime;
	}

	@Column(name = "CREATEDBY", nullable = false, length = 1020)
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Column(name = "DESCRIPTION", length = 1020)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "AMOUNT", precision = 25, scale = 4)
	public BigDecimal getAmount() {
		return this.amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@Column(name = "PAYMENTMETHOD", length = 1020)
	public String getPaymentmethod() {
		return this.paymentmethod;
	}

	public void setPaymentmethod(String paymentmethod) {
		this.paymentmethod = paymentmethod;
	}

	@Column(name = "ERRCODE", length = 1020)
	public String getErrcode() {
		return this.errcode;
	}

	public void setErrcode(String errcode) {
		this.errcode = errcode;
	}

	@Column(name = "USERCODE", length = 1020)
	public String getUsercode() {
		return this.usercode;
	}

	public void setUsercode(String usercode) {
		this.usercode = usercode;
	}

	@Column(name = "TRANSSTATUS", length = 1020)
	public String getTransstatus() {
		return this.transstatus;
	}

	public void setTransstatus(String transstatus) {
		this.transstatus = transstatus;
	}

	@Column(name = "CURRCODE", length = 1020)
	public String getCurrcode() {
		return this.currcode;
	}

	public void setCurrcode(String currcode) {
		this.currcode = currcode;
	}

	@Column(name = "EUI", length = 1020)
	public String getEui() {
		return this.eui;
	}

	public void setEui(String eui) {
		this.eui = eui;
	}

	@Column(name = "TRANSACTIONDATE", length = 1020)
	public String getTransactiondate() {
		return this.transactiondate;
	}

	public void setTransactiondate(String transactiondate) {
		this.transactiondate = transactiondate;
	}

	@Column(name = "NSIATRANSCOMPLETIONTIME")
	public Serializable getNsiatranscompletiontime() {
		return this.nsiatranscompletiontime;
	}

	public void setNsiatranscompletiontime(Serializable nsiatranscompletiontime) {
		this.nsiatranscompletiontime = nsiatranscompletiontime;
	}

	@Column(name = "TRANSTYPE", length = 1020)
	public String getTranstype() {
		return this.transtype;
	}

	public void setTranstype(String transtype) {
		this.transtype = transtype;
	}

	@Column(name = "ISBLACKLISTED", length = 1020)
	public String getIsblacklisted() {
		return this.isblacklisted;
	}

	public void setIsblacklisted(String isblacklisted) {
		this.isblacklisted = isblacklisted;
	}

	@Column(name = "FRAUDRISKLEVEL", precision = 10, scale = 0)
	public Long getFraudrisklevel() {
		return this.fraudrisklevel;
	}

	public void setFraudrisklevel(Long fraudrisklevel) {
		this.fraudrisklevel = fraudrisklevel;
	}

	@Column(name = "FRAUDRISKSCORE", precision = 25, scale = 4)
	public BigDecimal getFraudriskscore() {
		return this.fraudriskscore;
	}

	public void setFraudriskscore(BigDecimal fraudriskscore) {
		this.fraudriskscore = fraudriskscore;
	}

	@Column(name = "EXCEEDHIGHRISK", length = 1020)
	public String getExceedhighrisk() {
		return this.exceedhighrisk;
	}

	public void setExceedhighrisk(String exceedhighrisk) {
		this.exceedhighrisk = exceedhighrisk;
	}

	@Column(name = "CARDTYPE", length = 1020)
	public String getCardtype() {
		return this.cardtype;
	}

	public void setCardtype(String cardtype) {
		this.cardtype = cardtype;
	}

	@Column(name = "CARDNOPARTIAL", length = 1020)
	public String getCardnopartial() {
		return this.cardnopartial;
	}

	public void setCardnopartial(String cardnopartial) {
		this.cardnopartial = cardnopartial;
	}

	@Column(name = "CARDNAME", length = 1020)
	public String getCardname() {
		return this.cardname;
	}

	public void setCardname(String cardname) {
		this.cardname = cardname;
	}

	@Column(name = "ACQUIRERBANK", length = 1020)
	public String getAcquirerbank() {
		return this.acquirerbank;
	}

	public void setAcquirerbank(String acquirerbank) {
		this.acquirerbank = acquirerbank;
	}

	@Column(name = "BANKRESCODE", length = 1020)
	public String getBankrescode() {
		return this.bankrescode;
	}

	public void setBankrescode(String bankrescode) {
		this.bankrescode = bankrescode;
	}

	@Column(name = "BANKRESMSG", length = 1020)
	public String getBankresmsg() {
		return this.bankresmsg;
	}

	public void setBankresmsg(String bankresmsg) {
		this.bankresmsg = bankresmsg;
	}

	@Column(name = "AUTHID", length = 1020)
	public String getAuthid() {
		return this.authid;
	}

	public void setAuthid(String authid) {
		this.authid = authid;
	}

	@Column(name = "BANKREFERENCE", length = 1020)
	public String getBankreference() {
		return this.bankreference;
	}

	public void setBankreference(String bankreference) {
		this.bankreference = bankreference;
	}

	@Column(name = "WHITELISTCARD", length = 1020)
	public String getWhitelistcard() {
		return this.whitelistcard;
	}

	public void setWhitelistcard(String whitelistcard) {
		this.whitelistcard = whitelistcard;
	}

	@Column(name = "OPERATION", length = 1020)
	public String getOperation() {
		return this.operation;
	}

	public void setOperation(String operation) {
		this.operation = operation;
	}

	@Column(name = "MDN", length = 1020)
	public String getMdn() {
		return this.mdn;
	}

	public void setMdn(String mdn) {
		this.mdn = mdn;
	}

	@Column(name = "TRANSACTIONID", scale = 0)
	public BigDecimal getTransactionid() {
		return this.transactionid;
	}

	public void setTransactionid(BigDecimal transactionid) {
		this.transactionid = transactionid;
	}

	@Column(name = "BILLREFERENCENUMBER", scale = 0)
	public BigDecimal getBillreferencenumber() {
		return this.billreferencenumber;
	}

	public void setBillreferencenumber(BigDecimal billreferencenumber) {
		this.billreferencenumber = billreferencenumber;
	}

	@Column(name = "CCFAILUREREASON", precision = 10, scale = 0)
	public Long getCcfailurereason() {
		return this.ccfailurereason;
	}

	public void setCcfailurereason(Long ccfailurereason) {
		this.ccfailurereason = ccfailurereason;
	}

	@Column(name = "SESSIONID", length = 1020)
	public String getSessionid() {
		return this.sessionid;
	}

	public void setSessionid(String sessionid) {
		this.sessionid = sessionid;
	}

	@Column(name = "CCBUCKETTYPE", length = 1020)
	public String getCcbuckettype() {
		return this.ccbuckettype;
	}

	public void setCcbuckettype(String ccbuckettype) {
		this.ccbuckettype = ccbuckettype;
	}

	@Column(name = "SOURCEIP", length = 1020)
	public String getSourceip() {
		return this.sourceip;
	}

	public void setSourceip(String sourceip) {
		this.sourceip = sourceip;
	}

	@Column(name = "PAYMENTGATEWAYEDU", precision = 3, scale = 0)
	public Short getPaymentgatewayedu() {
		return this.paymentgatewayedu;
	}

	public void setPaymentgatewayedu(Short paymentgatewayedu) {
		this.paymentgatewayedu = paymentgatewayedu;
	}

	@Column(name = "ISVOID", precision = 3, scale = 0)
	public Short getIsvoid() {
		return this.isvoid;
	}

	public void setIsvoid(Short isvoid) {
		this.isvoid = isvoid;
	}

	@Column(name = "VOIDBY", length = 1020)
	public String getVoidby() {
		return this.voidby;
	}

	public void setVoidby(String voidby) {
		this.voidby = voidby;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "creditCardTransaction")
	public Set<PendingCommodityTransfer> getPendingCommodityTransfers() {
		return this.pendingCommodityTransfers;
	}

	public void setPendingCommodityTransfers(
			Set<PendingCommodityTransfer> pendingCommodityTransfers) {
		this.pendingCommodityTransfers = pendingCommodityTransfers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "creditCardTransaction")
	public Set<CommodityTransfer> getCommodityTransfers() {
		return this.commodityTransfers;
	}

	public void setCommodityTransfers(Set<CommodityTransfer> commodityTransfers) {
		this.commodityTransfers = commodityTransfers;
	}

}
