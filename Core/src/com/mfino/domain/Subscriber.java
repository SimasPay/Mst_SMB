package com.mfino.domain;

// Generated Sep 27, 2016 5:23:21 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Type;

import com.mfino.hibernate.Timestamp;

/**
 * Subscriber generated by hbm2java
 */
@Entity
@Table(name = "SUBSCRIBER")
public class Subscriber extends Base implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	public static final String FieldName_Company = "company";
	public static final String FieldName_UpgradeState = "upgradestate";
	public static final String FieldName_SubscriberStatus = "status";
	public static final String FieldName_FirstName = "firstname";
	public static final String FieldName_LastName = "lastname";
	public static final String FieldName_SubscriberRestrictions = "restrictions";
	public static final String FieldName_DompetMerchant = "dompetmerchant";
	public static final String FieldName_RegistrationMedium = "registrationmedium";
	public static final String FieldName_ApproveOrRejectTime = "approveorrejecttime";
	public static final String FieldName_SubscriberType = "type";
	public static final String FieldName_RegisteringPartnerID = "registeringpartnerid";

	public static final String FieldName_KYCLevelByKYCLevel = "kycLevel";

	public static final String FieldName_KYCLevel = "kycLevel";

	public static final String FieldName_ActivationTime = "activationtime";

	public static final String FieldName_StatusTime = "statustime";
	
	private Address addressBySubscriberaddressid;
	private Address addressBySubscriberaddressktpid;
	private MfinoUser mfinoUserBySubscriberuserid;
	private MfinoUser mfinoUserByUserid;
	private MfinoServiceProvider MfinoServiceProvider;
	private KycLevel kycLevel;
	private Company company;
	private AuthPersonDetails authPersonDetails;
	private BigDecimal parentid;
	private String firstname;
	private String lastname;
	private String gender;
	private String birthplace;
	private Timestamp dateofbirth;
	private String mdnbrand;
	private String email;
	private Long notificationmethod;
	private long language;
	private String currency;
	private String timezone;
	private long restrictions;
	private long type;
	private long status;
	private Timestamp statustime;
	private Timestamp activationtime;
	private Timestamp approveorrejecttime;
	private String approvedorrejectedby;
	private String approveorrejectcomment;
	private String appliedby;
	private Timestamp appliedtime;
	private short dompetmerchant;
	private String securityquestion;
	private String securityanswer;
	private Long partnertype;
	private BigDecimal upgradablekyclevel;
	private Long upgradestate;
	private Timestamp idexiparetiontime;
	private BigDecimal referenceaccount;
	private String aliasname;
	private Short detailsrequired;
	private Long registrationmedium;
	private Long registeringpartnerid;
	private Long approvalidnumber;
	private Timestamp lastnotificationtime;
	private String nickname;
	private Short isemailverified;
	private String mothersmaidenname;
	private Set<SubscriberMdn> subscriberMdns = new HashSet<SubscriberMdn>(0);
	private Set<BillPaymentTxn> billPaymentTxns = new HashSet<BillPaymentTxn>(0);
	private Set<SubscriberAddiInfo> subscriberAddiInfos = new HashSet<SubscriberAddiInfo>(
			0);
	private Set<SubscriberFavorite> subscriberFavorites = new HashSet<SubscriberFavorite>(
			0);
	private Merchant merchant;
	private Set<Person2Person> person2Persons = new HashSet<Person2Person>(0);
	private Set<PendingCommodityTransfer> pendingCommodityTransfers = new HashSet<PendingCommodityTransfer>(
			0);
	private Set<BulkUpload> bulkUploads = new HashSet<BulkUpload>(0);
	private Set<CardInfo> cardInfos = new HashSet<CardInfo>(0);
	private Set<TxnAmountDstrbLog> txnAmountDstrbLogs = new HashSet<TxnAmountDstrbLog>(
			0);
	private Set<CommodityTransfer> commodityTransfers = new HashSet<CommodityTransfer>(
			0);
	private Set<CreditcardDestinations> creditcardDestinationses = new HashSet<CreditcardDestinations>(
			0);
	private Set<CreditCardTransaction> creditCardTransactions = new HashSet<CreditCardTransaction>(
			0);
	private Set<Partner> partners = new HashSet<Partner>(0);

	public Subscriber() {
	}

	
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUBSCRIBERADDRESSID")
	public Address getAddressBySubscriberaddressid() {
		return this.addressBySubscriberaddressid;
	}

	public void setAddressBySubscriberaddressid(
			Address addressBySubscriberaddressid) {
		this.addressBySubscriberaddressid = addressBySubscriberaddressid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUBSCRIBERADDRESSKTPID")
	public Address getAddressBySubscriberaddressktpid() {
		return this.addressBySubscriberaddressktpid;
	}

	public void setAddressBySubscriberaddressktpid(
			Address addressBySubscriberaddressktpid) {
		this.addressBySubscriberaddressktpid = addressBySubscriberaddressktpid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUBSCRIBERUSERID")
	public MfinoUser getMfinoUserBySubscriberuserid() {
		return this.mfinoUserBySubscriberuserid;
	}

	public void setMfinoUserBySubscriberuserid(
			MfinoUser mfinoUserBySubscriberuserid) {
		this.mfinoUserBySubscriberuserid = mfinoUserBySubscriberuserid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USERID")
	public MfinoUser getMfinoUserByUserid() {
		return this.mfinoUserByUserid;
	}

	public void setMfinoUserByUserid(MfinoUser mfinoUserByUserid) {
		this.mfinoUserByUserid = mfinoUserByUserid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MSPID", nullable = false)
	public MfinoServiceProvider getMfinoServiceProvider() {
		return this.MfinoServiceProvider;
	}

	public void setMfinoServiceProvider(
			MfinoServiceProvider MfinoServiceProvider) {
		this.MfinoServiceProvider = MfinoServiceProvider;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "KYCLEVEL")
	public KycLevel getKycLevel() {
		return this.kycLevel;
	}

	public void setKycLevel(KycLevel kycLevel) {
		this.kycLevel = kycLevel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COMPANYID", nullable = false)
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AUTHORIZINGPERSONID")
	public AuthPersonDetails getAuthPersonDetails() {
		return this.authPersonDetails;
	}

	public void setAuthPersonDetails(AuthPersonDetails authPersonDetails) {
		this.authPersonDetails = authPersonDetails;
	}

	

	@Column(name = "PARENTID", nullable = false, scale = 0)
	public BigDecimal getParentid() {
		return this.parentid;
	}

	public void setParentid(BigDecimal parentid) {
		this.parentid = parentid;
	}

	@Column(name = "FIRSTNAME", length = 1020)
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Column(name = "LASTNAME", length = 1020)
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "GENDER", length = 1020)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "BIRTHPLACE", length = 1020)
	public String getBirthplace() {
		return this.birthplace;
	}

	public void setBirthplace(String birthplace) {
		this.birthplace = birthplace;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "DATEOFBIRTH")
	public Timestamp getDateofbirth() {
		return this.dateofbirth;
	}

	public void setDateofbirth(Timestamp dateofbirth) {
		this.dateofbirth = dateofbirth;
	}

	@Column(name = "MDNBRAND", length = 1020)
	public String getMdnbrand() {
		return this.mdnbrand;
	}

	public void setMdnbrand(String mdnbrand) {
		this.mdnbrand = mdnbrand;
	}

	@Column(name = "EMAIL", length = 1020)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "NOTIFICATIONMETHOD", precision = 10, scale = 0)
	public Long getNotificationmethod() {
		return this.notificationmethod;
	}

	public void setNotificationmethod(Long notificationmethod) {
		this.notificationmethod = notificationmethod;
	}

	@Column(name = "LANGUAGE", nullable = false, precision = 10, scale = 0)
	public long getLanguage() {
		return this.language;
	}

	public void setLanguage(long language) {
		this.language = language;
	}

	@Column(name = "CURRENCY", nullable = false, length = 1020)
	public String getCurrency() {
		return this.currency;
	}

	public void setCurrency(String currency) {
		this.currency = currency;
	}

	@Column(name = "TIMEZONE", length = 1020)
	public String getTimezone() {
		return this.timezone;
	}

	public void setTimezone(String timezone) {
		this.timezone = timezone;
	}

	@Column(name = "RESTRICTIONS", nullable = false, precision = 10, scale = 0)
	public long getRestrictions() {
		return this.restrictions;
	}

	public void setRestrictions(long restrictions) {
		this.restrictions = restrictions;
	}

	@Column(name = "TYPE", nullable = false, precision = 10, scale = 0)
	public long getType() {
		return this.type;
	}

	public void setType(long type) {
		this.type = type;
	}

	@Column(name = "STATUS", nullable = false, precision = 10, scale = 0)
	public long getStatus() {
		return this.status;
	}

	public void setStatus(long status) {
		this.status = status;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "STATUSTIME", nullable = false)
	public Timestamp getStatustime() {
		return this.statustime;
	}

	public void setStatustime(Timestamp statustime) {
		this.statustime = statustime;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "ACTIVATIONTIME")
	public Timestamp getActivationtime() {
		return this.activationtime;
	}

	public void setActivationtime(Timestamp activationtime) {
		this.activationtime = activationtime;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "APPROVEORREJECTTIME")
	public Timestamp getApproveorrejecttime() {
		return this.approveorrejecttime;
	}

	public void setApproveorrejecttime(Timestamp approveorrejecttime) {
		this.approveorrejecttime = approveorrejecttime;
	}

	@Column(name = "APPROVEDORREJECTEDBY", length = 1020)
	public String getApprovedorrejectedby() {
		return this.approvedorrejectedby;
	}

	public void setApprovedorrejectedby(String approvedorrejectedby) {
		this.approvedorrejectedby = approvedorrejectedby;
	}

	@Column(name = "APPROVEORREJECTCOMMENT", length = 1020)
	public String getApproveorrejectcomment() {
		return this.approveorrejectcomment;
	}

	public void setApproveorrejectcomment(String approveorrejectcomment) {
		this.approveorrejectcomment = approveorrejectcomment;
	}

	@Column(name = "APPLIEDBY", length = 1020)
	public String getAppliedby() {
		return this.appliedby;
	}

	public void setAppliedby(String appliedby) {
		this.appliedby = appliedby;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "APPLIEDTIME")
	public Timestamp getAppliedtime() {
		return this.appliedtime;
	}

	public void setAppliedtime(Timestamp appliedtime) {
		this.appliedtime = appliedtime;
	}

	@Column(name = "DOMPETMERCHANT", nullable = false, precision = 3, scale = 0)
	public short getDompetmerchant() {
		return this.dompetmerchant;
	}

	public void setDompetmerchant(short dompetmerchant) {
		this.dompetmerchant = dompetmerchant;
	}

	@Column(name = "SECURITYQUESTION", length = 1020)
	public String getSecurityquestion() {
		return this.securityquestion;
	}

	public void setSecurityquestion(String securityquestion) {
		this.securityquestion = securityquestion;
	}

	@Column(name = "SECURITYANSWER", length = 1020)
	public String getSecurityanswer() {
		return this.securityanswer;
	}

	public void setSecurityanswer(String securityanswer) {
		this.securityanswer = securityanswer;
	}

	@Column(name = "PARTNERTYPE", precision = 10, scale = 0)
	public Long getPartnertype() {
		return this.partnertype;
	}

	public void setPartnertype(Long partnertype) {
		this.partnertype = partnertype;
	}

	@Column(name = "UPGRADABLEKYCLEVEL", scale = 0)
	public BigDecimal getUpgradablekyclevel() {
		return this.upgradablekyclevel;
	}

	public void setUpgradablekyclevel(BigDecimal upgradablekyclevel) {
		this.upgradablekyclevel = upgradablekyclevel;
	}

	@Column(name = "UPGRADESTATE", precision = 10, scale = 0)
	public Long getUpgradestate() {
		return this.upgradestate;
	}

	public void setUpgradestate(Long upgradestate) {
		this.upgradestate = upgradestate;
	}
	
	@Type(type = "userDefinedTimeStamp")
	@Column(name = "IDEXIPARETIONTIME")
	public Timestamp getIdexiparetiontime() {
		return this.idexiparetiontime;
	}

	public void setIdexiparetiontime(Timestamp idexiparetiontime) {
		this.idexiparetiontime = idexiparetiontime;
	}

	@Column(name = "REFERENCEACCOUNT", scale = 0)
	public BigDecimal getReferenceaccount() {
		return this.referenceaccount;
	}

	public void setReferenceaccount(BigDecimal referenceaccount) {
		this.referenceaccount = referenceaccount;
	}

	@Column(name = "ALIASNAME", length = 1020)
	public String getAliasname() {
		return this.aliasname;
	}

	public void setAliasname(String aliasname) {
		this.aliasname = aliasname;
	}

	@Column(name = "DETAILSREQUIRED", precision = 3, scale = 0)
	public Short getDetailsrequired() {
		return this.detailsrequired;
	}

	public void setDetailsrequired(Short detailsrequired) {
		this.detailsrequired = detailsrequired;
	}

	@Column(name = "REGISTRATIONMEDIUM", precision = 10, scale = 0)
	public Long getRegistrationmedium() {
		return this.registrationmedium;
	}

	public void setRegistrationmedium(Long registrationmedium) {
		this.registrationmedium = registrationmedium;
	}

	@Column(name = "REGISTERINGPARTNERID", scale = 0)
	public Long getRegisteringpartnerid() {
		return this.registeringpartnerid;
	}

	public void setRegisteringpartnerid(Long registeringpartnerid) {
		this.registeringpartnerid = registeringpartnerid;
	}

	@Column(name = "APPROVALIDNUMBER", precision = 10, scale = 0)
	public Long getApprovalidnumber() {
		return this.approvalidnumber;
	}

	public void setApprovalidnumber(Long approvalidnumber) {
		this.approvalidnumber = approvalidnumber;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "LASTNOTIFICATIONTIME")
	public Timestamp getLastnotificationtime() {
		return this.lastnotificationtime;
	}

	public void setLastnotificationtime(Timestamp lastnotificationtime) {
		this.lastnotificationtime = lastnotificationtime;
	}

	@Column(name = "NICKNAME")
	public String getNickname() {
		return this.nickname;
	}

	public void setNickname(String nickname) {
		this.nickname = nickname;
	}

	@Column(name = "ISEMAILVERIFIED", precision = 3, scale = 0)
	public Short getIsemailverified() {
		return this.isemailverified;
	}

	public void setIsemailverified(Short isemailverified) {
		this.isemailverified = isemailverified;
	}

	@Column(name = "MOTHERSMAIDENNAME", length = 1020)
	public String getMothersmaidenname() {
		return this.mothersmaidenname;
	}

	public void setMothersmaidenname(String mothersmaidenname) {
		this.mothersmaidenname = mothersmaidenname;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<SubscriberMdn> getSubscriberMdns() {
		return this.subscriberMdns;
	}

	public void setSubscriberMdns(Set<SubscriberMdn> subscriberMdns) {
		this.subscriberMdns = subscriberMdns;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<BillPaymentTxn> getBillPaymentTxns() {
		return this.billPaymentTxns;
	}

	public void setBillPaymentTxns(Set<BillPaymentTxn> billPaymentTxns) {
		this.billPaymentTxns = billPaymentTxns;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<SubscriberAddiInfo> getSubscriberAddiInfos() {
		return this.subscriberAddiInfos;
	}

	public void setSubscriberAddiInfos(
			Set<SubscriberAddiInfo> subscriberAddiInfos) {
		this.subscriberAddiInfos = subscriberAddiInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<SubscriberFavorite> getSubscriberFavorites() {
		return this.subscriberFavorites;
	}

	public void setSubscriberFavorites(
			Set<SubscriberFavorite> subscriberFavorites) {
		this.subscriberFavorites = subscriberFavorites;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Merchant getMerchant() {
		return this.merchant;
	}

	public void setMerchant(Merchant merchant) {
		this.merchant = merchant;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<Person2Person> getPerson2Persons() {
		return this.person2Persons;
	}

	public void setPerson2Persons(Set<Person2Person> person2Persons) {
		this.person2Persons = person2Persons;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<PendingCommodityTransfer> getPendingCommodityTransfers() {
		return this.pendingCommodityTransfers;
	}

	public void setPendingCommodityTransfers(
			Set<PendingCommodityTransfer> pendingCommodityTransfers) {
		this.pendingCommodityTransfers = pendingCommodityTransfers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<BulkUpload> getBulkUploads() {
		return this.bulkUploads;
	}

	public void setBulkUploads(Set<BulkUpload> bulkUploads) {
		this.bulkUploads = bulkUploads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<CardInfo> getCardInfos() {
		return this.cardInfos;
	}

	public void setCardInfos(Set<CardInfo> cardInfos) {
		this.cardInfos = cardInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<TxnAmountDstrbLog> getTxnAmountDstrbLogs() {
		return this.txnAmountDstrbLogs;
	}

	public void setTxnAmountDstrbLogs(Set<TxnAmountDstrbLog> txnAmountDstrbLogs) {
		this.txnAmountDstrbLogs = txnAmountDstrbLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<CommodityTransfer> getCommodityTransfers() {
		return this.commodityTransfers;
	}

	public void setCommodityTransfers(Set<CommodityTransfer> commodityTransfers) {
		this.commodityTransfers = commodityTransfers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<CreditcardDestinations> getCreditcardDestinationses() {
		return this.creditcardDestinationses;
	}

	public void setCreditcardDestinationses(
			Set<CreditcardDestinations> creditcardDestinationses) {
		this.creditcardDestinationses = creditcardDestinationses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<CreditCardTransaction> getCreditCardTransactions() {
		return this.creditCardTransactions;
	}

	public void setCreditCardTransactions(
			Set<CreditCardTransaction> creditCardTransactions) {
		this.creditCardTransactions = creditCardTransactions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriber")
	public Set<Partner> getPartners() {
		return this.partners;
	}

	public void setPartners(Set<Partner> partners) {
		this.partners = partners;
	}

}
