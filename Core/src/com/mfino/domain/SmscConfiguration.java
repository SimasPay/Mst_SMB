package com.mfino.domain;

// Generated Sep 27, 2016 5:23:21 PM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import com.mfino.hibernate.Timestamp;
/**
 * SmscConfiguration generated by hbm2java
 */
@Entity
@Table(name = "SMSC_CONFIGURATION", uniqueConstraints = @UniqueConstraint(columnNames = "SHORTCODE"))
public class SmscConfiguration extends Base implements java.io.Serializable {

	
	private SmsPartner smsPartner;
	private String shortcode;
	private String longnumber;
	private String smartfrensmscid;
	private String otherlocaloperatorsmscid;
	private BigDecimal charging;
	private String header;
	private String footer;

	public SmscConfiguration() {
	}

	public SmscConfiguration(BigDecimal id, SmsPartner smsPartner,
			Timestamp lastupdatetime, String updatedby,
			Timestamp createtime, String createdby) {
		this.id = id;
		this.smsPartner = smsPartner;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
	}

	public SmscConfiguration(BigDecimal id, SmsPartner smsPartner,
			Timestamp lastupdatetime, String updatedby,
			Timestamp createtime, String createdby, String shortcode,
			String longnumber, String smartfrensmscid,
			String otherlocaloperatorsmscid, BigDecimal charging,
			String header, String footer) {
		this.id = id;
		this.smsPartner = smsPartner;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
		this.shortcode = shortcode;
		this.longnumber = longnumber;
		this.smartfrensmscid = smartfrensmscid;
		this.otherlocaloperatorsmscid = otherlocaloperatorsmscid;
		this.charging = charging;
		this.header = header;
		this.footer = footer;
	}

	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARTNERID", nullable = false)
	public SmsPartner getSmsPartner() {
		return this.smsPartner;
	}

	public void setSmsPartner(SmsPartner smsPartner) {
		this.smsPartner = smsPartner;
	}

	
	@Column(name = "SHORTCODE", unique = true, length = 1020)
	public String getShortcode() {
		return this.shortcode;
	}

	public void setShortcode(String shortcode) {
		this.shortcode = shortcode;
	}

	@Column(name = "LONGNUMBER", length = 1020)
	public String getLongnumber() {
		return this.longnumber;
	}

	public void setLongnumber(String longnumber) {
		this.longnumber = longnumber;
	}

	@Column(name = "SMARTFRENSMSCID", length = 1020)
	public String getSmartfrensmscid() {
		return this.smartfrensmscid;
	}

	public void setSmartfrensmscid(String smartfrensmscid) {
		this.smartfrensmscid = smartfrensmscid;
	}

	@Column(name = "OTHERLOCALOPERATORSMSCID", length = 1020)
	public String getOtherlocaloperatorsmscid() {
		return this.otherlocaloperatorsmscid;
	}

	public void setOtherlocaloperatorsmscid(String otherlocaloperatorsmscid) {
		this.otherlocaloperatorsmscid = otherlocaloperatorsmscid;
	}

	@Column(name = "CHARGING", precision = 25, scale = 4)
	public BigDecimal getCharging() {
		return this.charging;
	}

	public void setCharging(BigDecimal charging) {
		this.charging = charging;
	}

	@Column(name = "HEADER", length = 1020)
	public String getHeader() {
		return this.header;
	}

	public void setHeader(String header) {
		this.header = header;
	}

	@Column(name = "FOOTER", length = 1020)
	public String getFooter() {
		return this.footer;
	}

	public void setFooter(String footer) {
		this.footer = footer;
	}

}
