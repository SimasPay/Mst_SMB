package com.mfino.domain;

// Generated Sep 27, 2016 5:23:21 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.mfino.hibernate.Timestamp;

/**
 * MfinoServiceProvider generated by hbm2java
 */
@Entity
@Table(name = "MFINO_SERVICE_PROVIDER")
public class MfinoServiceProvider extends Base implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private String name;
	private String description;
	private Long status;
	private Timestamp statustime;
	private Set<Person2Person> person2Persons = new HashSet<Person2Person>(0);
	private Set<BulkUpload> bulkUploads = new HashSet<BulkUpload>(0);
	private Set<MfsBiller> mfsBillers = new HashSet<MfsBiller>(0);
	private Set<ServiceChargeTxnLog> serviceChargeTxnLogs = new HashSet<ServiceChargeTxnLog>(
			0);
	private Set<MfinoUser> mfinoUsers = new HashSet<MfinoUser>(0);
	private Set<TransactionCharge> transactionCharges = new HashSet<TransactionCharge>(
			0);
	private Set<MfsbillerPartnerMap> mfsbillerPartnerMaps = new HashSet<MfsbillerPartnerMap>(
			0);
	private Set<TxnAmountDstrbLog> txnAmountDstrbLogs = new HashSet<TxnAmountDstrbLog>(
			0);
	private Set<Partner> partners = new HashSet<Partner>(0);
	private Set<ServiceSettlementCfg> serviceSettlementCfgs = new HashSet<ServiceSettlementCfg>(
			0);
	private Set<Brand> brands = new HashSet<Brand>(0);
	private Set<DistributionChainTemplate> distributionChainTemps = new HashSet<DistributionChainTemplate>(
			0);
	private Set<CommodityTransfer> commodityTransfers = new HashSet<CommodityTransfer>(
			0);
	private Set<PartnerServices> partnerServiceses = new HashSet<PartnerServices>(
			0);
	private Set<TransactionLog> transactionLogs = new HashSet<TransactionLog>(0);
	private Set<AuthPersonDetails> authPersonDetailses = new HashSet<AuthPersonDetails>(
			0);
	private Set<TransactionChargeLog> transactionChargeLogs = new HashSet<TransactionChargeLog>(
			0);
	private Set<PendingCommodityTransfer> pendingCommodityTransfers = new HashSet<PendingCommodityTransfer>(
			0);
	private Set<Notification> notifications = new HashSet<Notification>(0);
	private Set<ServiceTransaction> serviceTransactions = new HashSet<ServiceTransaction>(
			0);
	private Set<SharePartner> sharePartners = new HashSet<SharePartner>(0);
	private Set<Service> services = new HashSet<Service>(0);
	private Set<SettlementTemplate> settlementTemplates = new HashSet<SettlementTemplate>(
			0);
	private Set<ChargePricing> chargePricings = new HashSet<ChargePricing>(0);
	private Set<Subscriber> subscribers = new HashSet<Subscriber>(0);
	private Set<TransactionRule> transactionRules = new HashSet<TransactionRule>(
			0);
	private Set<ChargeType> chargeTypes = new HashSet<ChargeType>(0);
	private Set<ChargeDefinition> chargeDefinitions = new HashSet<ChargeDefinition>(
			0);
	private Set<PocketTemplate> pocketTemplates = new HashSet<PocketTemplate>(0);
	private Set<TransactionType> transactionTypes = new HashSet<TransactionType>(
			0);

	public MfinoServiceProvider() {
	}

	public MfinoServiceProvider(BigDecimal id, Timestamp lastupdatetime,
			String updatedby, Timestamp createtime, String createdby) {
		this.id = id;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
	}

	public MfinoServiceProvider(BigDecimal id, Timestamp lastupdatetime,
			String updatedby, Timestamp createtime, String createdby,
			String name, String description, Long status,
			Timestamp statustime, Set<Person2Person> person2Persons,
			Set<BulkUpload> bulkUploads, Set<MfsBiller> mfsBillers,
			Set<ServiceChargeTxnLog> serviceChargeTxnLogs,
			Set<MfinoUser> mfinoUsers,
			Set<TransactionCharge> transactionCharges,
			Set<MfsbillerPartnerMap> mfsbillerPartnerMaps,
			Set<TxnAmountDstrbLog> txnAmountDstrbLogs, Set<Partner> partners,
			Set<ServiceSettlementCfg> serviceSettlementCfgs, Set<Brand> brands,
			Set<DistributionChainTemplate> distributionChainTemps,
			Set<CommodityTransfer> commodityTransfers,
			Set<PartnerServices> partnerServiceses,
			Set<TransactionLog> transactionLogs,
			Set<AuthPersonDetails> authPersonDetailses,
			Set<TransactionChargeLog> transactionChargeLogs,
			Set<PendingCommodityTransfer> pendingCommodityTransfers,
			Set<Notification> notifications,
			Set<ServiceTransaction> serviceTransactions,
			Set<SharePartner> sharePartners, Set<Service> services,
			Set<SettlementTemplate> settlementTemplates,
			Set<ChargePricing> chargePricings, Set<Subscriber> subscribers,
			Set<TransactionRule> transactionRules, Set<ChargeType> chargeTypes,
			Set<ChargeDefinition> chargeDefinitions,
			Set<PocketTemplate> pocketTemplates,
			Set<TransactionType> transactionTypes) {
		this.id = id;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
		this.name = name;
		this.description = description;
		this.status = status;
		this.statustime = statustime;
		this.person2Persons = person2Persons;
		this.bulkUploads = bulkUploads;
		this.mfsBillers = mfsBillers;
		this.serviceChargeTxnLogs = serviceChargeTxnLogs;
		this.mfinoUsers = mfinoUsers;
		this.transactionCharges = transactionCharges;
		this.mfsbillerPartnerMaps = mfsbillerPartnerMaps;
		this.txnAmountDstrbLogs = txnAmountDstrbLogs;
		this.partners = partners;
		this.serviceSettlementCfgs = serviceSettlementCfgs;
		this.brands = brands;
		this.distributionChainTemps = distributionChainTemps;
		this.commodityTransfers = commodityTransfers;
		this.partnerServiceses = partnerServiceses;
		this.transactionLogs = transactionLogs;
		this.authPersonDetailses = authPersonDetailses;
		this.transactionChargeLogs = transactionChargeLogs;
		this.pendingCommodityTransfers = pendingCommodityTransfers;
		this.notifications = notifications;
		this.serviceTransactions = serviceTransactions;
		this.sharePartners = sharePartners;
		this.services = services;
		this.settlementTemplates = settlementTemplates;
		this.chargePricings = chargePricings;
		this.subscribers = subscribers;
		this.transactionRules = transactionRules;
		this.chargeTypes = chargeTypes;
		this.chargeDefinitions = chargeDefinitions;
		this.pocketTemplates = pocketTemplates;
		this.transactionTypes = transactionTypes;
	}

	
	@Column(name = "NAME", length = 1020)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DESCRIPTION", length = 1020)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "STATUS", precision = 10, scale = 0)
	public Long getStatus() {
		return this.status;
	}

	public void setStatus(Long status) {
		this.status = status;
	}

	@Column(name = "STATUSTIME")
	public Timestamp getStatustime() {
		return this.statustime;
	}

	public void setStatustime(Timestamp statustime) {
		this.statustime = statustime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<Person2Person> getPerson2Persons() {
		return this.person2Persons;
	}

	public void setPerson2Persons(Set<Person2Person> person2Persons) {
		this.person2Persons = person2Persons;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<BulkUpload> getBulkUploads() {
		return this.bulkUploads;
	}

	public void setBulkUploads(Set<BulkUpload> bulkUploads) {
		this.bulkUploads = bulkUploads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<MfsBiller> getMfsBillers() {
		return this.mfsBillers;
	}

	public void setMfsBillers(Set<MfsBiller> mfsBillers) {
		this.mfsBillers = mfsBillers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<ServiceChargeTxnLog> getServiceChargeTxnLogs() {
		return this.serviceChargeTxnLogs;
	}

	public void setServiceChargeTxnLogs(
			Set<ServiceChargeTxnLog> serviceChargeTxnLogs) {
		this.serviceChargeTxnLogs = serviceChargeTxnLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<MfinoUser> getMfinoUsers() {
		return this.mfinoUsers;
	}

	public void setMfinoUsers(Set<MfinoUser> mfinoUsers) {
		this.mfinoUsers = mfinoUsers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<TransactionCharge> getTransactionCharges() {
		return this.transactionCharges;
	}

	public void setTransactionCharges(Set<TransactionCharge> transactionCharges) {
		this.transactionCharges = transactionCharges;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<MfsbillerPartnerMap> getMfsbillerPartnerMaps() {
		return this.mfsbillerPartnerMaps;
	}

	public void setMfsbillerPartnerMaps(
			Set<MfsbillerPartnerMap> mfsbillerPartnerMaps) {
		this.mfsbillerPartnerMaps = mfsbillerPartnerMaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<TxnAmountDstrbLog> getTxnAmountDstrbLogs() {
		return this.txnAmountDstrbLogs;
	}

	public void setTxnAmountDstrbLogs(Set<TxnAmountDstrbLog> txnAmountDstrbLogs) {
		this.txnAmountDstrbLogs = txnAmountDstrbLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<Partner> getPartners() {
		return this.partners;
	}

	public void setPartners(Set<Partner> partners) {
		this.partners = partners;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<ServiceSettlementCfg> getServiceSettlementCfgs() {
		return this.serviceSettlementCfgs;
	}

	public void setServiceSettlementCfgs(
			Set<ServiceSettlementCfg> serviceSettlementCfgs) {
		this.serviceSettlementCfgs = serviceSettlementCfgs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<Brand> getBrands() {
		return this.brands;
	}

	public void setBrands(Set<Brand> brands) {
		this.brands = brands;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<DistributionChainTemplate> getDistributionChainTemps() {
		return this.distributionChainTemps;
	}

	public void setDistributionChainTemps(
			Set<DistributionChainTemplate> distributionChainTemps) {
		this.distributionChainTemps = distributionChainTemps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<CommodityTransfer> getCommodityTransfers() {
		return this.commodityTransfers;
	}

	public void setCommodityTransfers(Set<CommodityTransfer> commodityTransfers) {
		this.commodityTransfers = commodityTransfers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<PartnerServices> getPartnerServiceses() {
		return this.partnerServiceses;
	}

	public void setPartnerServiceses(Set<PartnerServices> partnerServiceses) {
		this.partnerServiceses = partnerServiceses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<TransactionLog> getTransactionLogs() {
		return this.transactionLogs;
	}

	public void setTransactionLogs(Set<TransactionLog> transactionLogs) {
		this.transactionLogs = transactionLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<AuthPersonDetails> getAuthPersonDetailses() {
		return this.authPersonDetailses;
	}

	public void setAuthPersonDetailses(
			Set<AuthPersonDetails> authPersonDetailses) {
		this.authPersonDetailses = authPersonDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<TransactionChargeLog> getTransactionChargeLogs() {
		return this.transactionChargeLogs;
	}

	public void setTransactionChargeLogs(
			Set<TransactionChargeLog> transactionChargeLogs) {
		this.transactionChargeLogs = transactionChargeLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<PendingCommodityTransfer> getPendingCommodityTransfers() {
		return this.pendingCommodityTransfers;
	}

	public void setPendingCommodityTransfers(
			Set<PendingCommodityTransfer> pendingCommodityTransfers) {
		this.pendingCommodityTransfers = pendingCommodityTransfers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<Notification> getNotifications() {
		return this.notifications;
	}

	public void setNotifications(Set<Notification> notifications) {
		this.notifications = notifications;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<ServiceTransaction> getServiceTransactions() {
		return this.serviceTransactions;
	}

	public void setServiceTransactions(
			Set<ServiceTransaction> serviceTransactions) {
		this.serviceTransactions = serviceTransactions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<SharePartner> getSharePartners() {
		return this.sharePartners;
	}

	public void setSharePartners(Set<SharePartner> sharePartners) {
		this.sharePartners = sharePartners;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<Service> getServices() {
		return this.services;
	}

	public void setServices(Set<Service> services) {
		this.services = services;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<SettlementTemplate> getSettlementTemplates() {
		return this.settlementTemplates;
	}

	public void setSettlementTemplates(
			Set<SettlementTemplate> settlementTemplates) {
		this.settlementTemplates = settlementTemplates;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<ChargePricing> getChargePricings() {
		return this.chargePricings;
	}

	public void setChargePricings(Set<ChargePricing> chargePricings) {
		this.chargePricings = chargePricings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<Subscriber> getSubscribers() {
		return this.subscribers;
	}

	public void setSubscribers(Set<Subscriber> subscribers) {
		this.subscribers = subscribers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<TransactionRule> getTransactionRules() {
		return this.transactionRules;
	}

	public void setTransactionRules(Set<TransactionRule> transactionRules) {
		this.transactionRules = transactionRules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<ChargeType> getChargeTypes() {
		return this.chargeTypes;
	}

	public void setChargeTypes(Set<ChargeType> chargeTypes) {
		this.chargeTypes = chargeTypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<ChargeDefinition> getChargeDefinitions() {
		return this.chargeDefinitions;
	}

	public void setChargeDefinitions(Set<ChargeDefinition> chargeDefinitions) {
		this.chargeDefinitions = chargeDefinitions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<PocketTemplate> getPocketTemplates() {
		return this.pocketTemplates;
	}

	public void setPocketTemplates(Set<PocketTemplate> pocketTemplates) {
		this.pocketTemplates = pocketTemplates;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mfinoServiceProvider")
	public Set<TransactionType> getTransactionTypes() {
		return this.transactionTypes;
	}

	public void setTransactionTypes(Set<TransactionType> transactionTypes) {
		this.transactionTypes = transactionTypes;
	}

}
