package com.mfino.domain;

// Generated Sep 27, 2016 5:23:21 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * MdnRange generated by hbm2java
 */
@Entity
@Table(name = "MDN_RANGE")
public class MdnRange extends Base implements java.io.Serializable {

	
	public static final String FieldName_StartPrefix = "startprefix";
	public static final String FieldName_EndPrefix = "endprefix";
	private Merchant merchant;
	private Brand brand;
	private String startprefix;
	private String endprefix;
    private Long id;
	public MdnRange() {
	}

	@Id
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator = "id_Sequence")
	@SequenceGenerator(name = "id_Sequence", sequenceName = "mdn_range_ID_SEQ")
	@Column(name = "ID", unique = true, nullable = false, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MERCHANTID", nullable = false)
	public Merchant getMerchant() {
		return this.merchant;
	}

	public void setMerchant(Merchant merchant) {
		this.merchant = merchant;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BRANDID", nullable = false)
	public Brand getBrand() {
		return this.brand;
	}

	public void setBrand(Brand brand) {
		this.brand = brand;
	}

	

	@Column(name = "STARTPREFIX", nullable = false, length = 1020)
	public String getStartprefix() {
		return this.startprefix;
	}

	public void setStartprefix(String startprefix) {
		this.startprefix = startprefix;
	}

	@Column(name = "ENDPREFIX", nullable = false, length = 1020)
	public String getEndprefix() {
		return this.endprefix;
	}

	public void setEndprefix(String endprefix) {
		this.endprefix = endprefix;
	}

}
