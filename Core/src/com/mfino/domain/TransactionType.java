package com.mfino.domain;

// Generated Sep 27, 2016 5:23:21 PM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import com.mfino.hibernate.Timestamp;

/**
 * TransactionType generated by hbm2java
 */
@Entity
@Table(name = "TRANSACTION_TYPE")
public class TransactionType extends Base implements java.io.Serializable {

	
	private mFinoServiceProvider mfinoServiceProvider;
	private String transactionname;
	private String displayname;
	private Set<ActorChannelMapping> actorChannelMappings = new HashSet<ActorChannelMapping>(
			0);
	private Set<RuleKey> ruleKeys = new HashSet<RuleKey>(0);
	private Set<TransactionRule> transactionRules = new HashSet<TransactionRule>(
			0);
	private Set<MfaTransactionsInfo> mfaTransactionsInfos = new HashSet<MfaTransactionsInfo>(
			0);
	private Set<ServiceTransaction> serviceTransactions = new HashSet<ServiceTransaction>(
			0);

	public TransactionType() {
	}

	public TransactionType(BigDecimal id,
			mFinoServiceProvider mfinoServiceProvider,
			Timestamp lastupdatetime, String updatedby,
			Timestamp createtime, String createdby) {
		this.id = id;
		this.mfinoServiceProvider = mfinoServiceProvider;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
	}

	public TransactionType(BigDecimal id,
			mFinoServiceProvider mfinoServiceProvider,
			Timestamp lastupdatetime, String updatedby,
			Timestamp createtime, String createdby, String transactionname,
			String displayname, Set<ActorChannelMapping> actorChannelMappings,
			Set<RuleKey> ruleKeys, Set<TransactionRule> transactionRules,
			Set<MfaTransactionsInfo> mfaTransactionsInfos,
			Set<ServiceTransaction> serviceTransactions) {
		this.id = id;
		this.mfinoServiceProvider = mfinoServiceProvider;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
		this.transactionname = transactionname;
		this.displayname = displayname;
		this.actorChannelMappings = actorChannelMappings;
		this.ruleKeys = ruleKeys;
		this.transactionRules = transactionRules;
		this.mfaTransactionsInfos = mfaTransactionsInfos;
		this.serviceTransactions = serviceTransactions;
	}

	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MSPID", nullable = false)
	public mFinoServiceProvider getMfinoServiceProvider() {
		return this.mfinoServiceProvider;
	}

	public void setMfinoServiceProvider(
			mFinoServiceProvider mfinoServiceProvider) {
		this.mfinoServiceProvider = mfinoServiceProvider;
	}

	

	@Column(name = "TRANSACTIONNAME", length = 1020)
	public String getTransactionname() {
		return this.transactionname;
	}

	public void setTransactionname(String transactionname) {
		this.transactionname = transactionname;
	}

	@Column(name = "DISPLAYNAME", length = 1020)
	public String getDisplayname() {
		return this.displayname;
	}

	public void setDisplayname(String displayname) {
		this.displayname = displayname;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transactionType")
	public Set<ActorChannelMapping> getActorChannelMappings() {
		return this.actorChannelMappings;
	}

	public void setActorChannelMappings(
			Set<ActorChannelMapping> actorChannelMappings) {
		this.actorChannelMappings = actorChannelMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transactionType")
	public Set<RuleKey> getRuleKeys() {
		return this.ruleKeys;
	}

	public void setRuleKeys(Set<RuleKey> ruleKeys) {
		this.ruleKeys = ruleKeys;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transactionType")
	public Set<TransactionRule> getTransactionRules() {
		return this.transactionRules;
	}

	public void setTransactionRules(Set<TransactionRule> transactionRules) {
		this.transactionRules = transactionRules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transactionType")
	public Set<MfaTransactionsInfo> getMfaTransactionsInfos() {
		return this.mfaTransactionsInfos;
	}

	public void setMfaTransactionsInfos(
			Set<MfaTransactionsInfo> mfaTransactionsInfos) {
		this.mfaTransactionsInfos = mfaTransactionsInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transactionType")
	public Set<ServiceTransaction> getServiceTransactions() {
		return this.serviceTransactions;
	}

	public void setServiceTransactions(
			Set<ServiceTransaction> serviceTransactions) {
		this.serviceTransactions = serviceTransactions;
	}

}
