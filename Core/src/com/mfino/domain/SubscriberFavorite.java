package com.mfino.domain;

// Generated Sep 27, 2016 2:09:23 PM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * SubscriberFavorite generated by hbm2java
 */
@Entity
@Table(name = "SUBSCRIBER_FAVORITE", uniqueConstraints = @UniqueConstraint(columnNames = {
		"SUBSCRIBERID", "FAVORITECATEGORYID", "FAVORITEVALUE" }))
public class SubscriberFavorite implements java.io.Serializable {

	private BigDecimal id;
	private long version;
	private FavoriteCategory favoriteCategory;
	private Subscriber subscriber;
	private Serializable lastupdatetime;
	private String updatedby;
	private Serializable createtime;
	private String createdby;
	private String favoritelabel;
	private String favoritevalue;
	private String favoritecode;

	public SubscriberFavorite() {
	}

	public SubscriberFavorite(BigDecimal id, FavoriteCategory favoriteCategory,
			Subscriber subscriber, Serializable lastupdatetime,
			String updatedby, Serializable createtime, String createdby,
			String favoritelabel, String favoritevalue) {
		this.id = id;
		this.favoriteCategory = favoriteCategory;
		this.subscriber = subscriber;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
		this.favoritelabel = favoritelabel;
		this.favoritevalue = favoritevalue;
	}

	public SubscriberFavorite(BigDecimal id, FavoriteCategory favoriteCategory,
			Subscriber subscriber, Serializable lastupdatetime,
			String updatedby, Serializable createtime, String createdby,
			String favoritelabel, String favoritevalue, String favoritecode) {
		this.id = id;
		this.favoriteCategory = favoriteCategory;
		this.subscriber = subscriber;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
		this.favoritelabel = favoritelabel;
		this.favoritevalue = favoritevalue;
		this.favoritecode = favoritecode;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false, precision = 10, scale = 0)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FAVORITECATEGORYID", nullable = false)
	public FavoriteCategory getFavoriteCategory() {
		return this.favoriteCategory;
	}

	public void setFavoriteCategory(FavoriteCategory favoriteCategory) {
		this.favoriteCategory = favoriteCategory;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUBSCRIBERID", nullable = false)
	public Subscriber getSubscriber() {
		return this.subscriber;
	}

	public void setSubscriber(Subscriber subscriber) {
		this.subscriber = subscriber;
	}

	@Column(name = "LASTUPDATETIME", nullable = false)
	public Serializable getLastupdatetime() {
		return this.lastupdatetime;
	}

	public void setLastupdatetime(Serializable lastupdatetime) {
		this.lastupdatetime = lastupdatetime;
	}

	@Column(name = "UPDATEDBY", nullable = false)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Column(name = "CREATETIME", nullable = false)
	public Serializable getCreatetime() {
		return this.createtime;
	}

	public void setCreatetime(Serializable createtime) {
		this.createtime = createtime;
	}

	@Column(name = "CREATEDBY", nullable = false)
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Column(name = "FAVORITELABEL", nullable = false)
	public String getFavoritelabel() {
		return this.favoritelabel;
	}

	public void setFavoritelabel(String favoritelabel) {
		this.favoritelabel = favoritelabel;
	}

	@Column(name = "FAVORITEVALUE", nullable = false)
	public String getFavoritevalue() {
		return this.favoritevalue;
	}

	public void setFavoritevalue(String favoritevalue) {
		this.favoritevalue = favoritevalue;
	}

	@Column(name = "FAVORITECODE", length = 45)
	public String getFavoritecode() {
		return this.favoritecode;
	}

	public void setFavoritecode(String favoritecode) {
		this.favoritecode = favoritecode;
	}

}
