package com.mfino.domain;

// Generated Sep 27, 2016 5:23:21 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Version;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;

import com.mfino.hibernate.Timestamp;
/**
 * Merchant generated by hbm2java
 */
@Entity
@Table(name = "MERCHANT")
public class Merchant  implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	public static final String FieldName_RecordID="id";
	public static final String FieldName_CreateTime = "createtime";
   public static final String FieldName_LastUpdateTime = "lastupdatetime";


	public static final String FieldName_TradeName = "tradename";
	public static final String FieldName_MerchantByParentID = "merchant";
	public static final String FieldName_GroupID = "groupid";
	public static final String FieldName_StatusTime = "statustime";
	private Long id;
	private long version;
	private Timestamp lastupdatetime;
	private String updatedby;
	private Timestamp createtime;
	private String createdby;
	private Address addressByMerchantaddressid;
	private Address addressByFranchiseoutletaddressid;
	private Region region;
	private Subscriber subscriber;
	private Merchant merchant;
	private Merchant m_pMerchantByParentID;
	private String groupid;
	private String tradename;
	private String typeoforganization;
	private BigDecimal distributionchaintemplateid;
	private String faxnumber;
	private String website;
	private BigDecimal currentweeklypurchaseamount;
	private Timestamp lastloptime;
	private String authorizedrepresentative;
	private String representativename;
	private String designation;
	private String franchisephonenumber;
	private String classification;
	private Long numberofoutlets;
	private String industryclassification;
	private Long yearestablished;
	private String authorizedfaxnumber;
	private String authorizedemail;
	private String admincomment;
	private long status;
	private Timestamp statustime;
	private Long rangecheck;
	private Set<MdnRange> mdnRanges = new HashSet<MdnRange>(0);
	private Set<LetterOfPurchase> letterOfPurchases = new HashSet<LetterOfPurchase>(
			0);
	private Set<BulkLop> bulkLops = new HashSet<BulkLop>(0);
	private Set<Merchant> merchants = new HashSet<Merchant>(0);

	public Merchant() {
	}

	

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "subscriber"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "ID", unique = true, nullable = false, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}
	
	@Version
	@Column(name = "Version", nullable = false)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}


	@Type(type = "userDefinedTimeStamp")
	@Column(name = "LastUpdateTime", nullable = false, length = 19)
	public Timestamp getLastUpdateTime() {
		return this.lastupdatetime;
	}

	public void setLastUpdateTime(Timestamp lastUpdateTime) {
		this.lastupdatetime = lastUpdateTime;
	}

	@Column(name = "UpdatedBy", nullable = false)
	public String getUpdatedBy() {
		return this.updatedby;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedby = updatedBy;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "CreateTime", nullable = false, length = 19)
	public Timestamp getCreateTime() {
		return this.createtime;
	}

	public void setCreateTime(Timestamp createTime) {
		this.createtime = createTime;
	}

	@Column(name = "CreatedBy", nullable = false)
	public String getCreatedBy() {
		return this.createdby;
	}

	public void setCreatedBy(String createdBy) {
		this.createdby = createdBy;
	}

	


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MERCHANTADDRESSID")
	public Address getAddressByMerchantaddressid() {
		return this.addressByMerchantaddressid;
	}

	public void setAddressByMerchantaddressid(Address addressByMerchantaddressid) {
		this.addressByMerchantaddressid = addressByMerchantaddressid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FRANCHISEOUTLETADDRESSID")
	public Address getAddressByFranchiseoutletaddressid() {
		return this.addressByFranchiseoutletaddressid;
	}

	public void setAddressByFranchiseoutletaddressid(
			Address addressByFranchiseoutletaddressid) {
		this.addressByFranchiseoutletaddressid = addressByFranchiseoutletaddressid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REGIONID")
	public Region getRegion() {
		return this.region;
	}

	public void setRegion(Region region) {
		this.region = region;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Subscriber getSubscriber() {
		return this.subscriber;
	}

	public void setSubscriber(Subscriber subscriber) {
		this.subscriber = subscriber;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENTID")
	public Merchant getMerchant() {
		return this.merchant;
	}

	public void setMerchant(Merchant merchant) {
		this.merchant = merchant;
	}


	@Column(name = "GROUPID", length = 1020)
	public String getGroupid() {
		return this.groupid;
	}

	public void setGroupid(String groupid) {
		this.groupid = groupid;
	}

	@Column(name = "TRADENAME", nullable = false, length = 1020)
	public String getTradename() {
		return this.tradename;
	}

	public void setTradename(String tradename) {
		this.tradename = tradename;
	}

	@Column(name = "TYPEOFORGANIZATION", length = 1020)
	public String getTypeoforganization() {
		return this.typeoforganization;
	}

	public void setTypeoforganization(String typeoforganization) {
		this.typeoforganization = typeoforganization;
	}

	@Column(name = "DISTRIBUTIONCHAINTEMPLATEID", scale = 0)
	public BigDecimal getDistributionchaintemplateid() {
		return this.distributionchaintemplateid;
	}

	public void setDistributionchaintemplateid(
			BigDecimal distributionchaintemplateid) {
		this.distributionchaintemplateid = distributionchaintemplateid;
	}

	@Column(name = "FAXNUMBER", length = 1020)
	public String getFaxnumber() {
		return this.faxnumber;
	}

	public void setFaxnumber(String faxnumber) {
		this.faxnumber = faxnumber;
	}

	@Column(name = "WEBSITE", length = 1020)
	public String getWebsite() {
		return this.website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	@Column(name = "CURRENTWEEKLYPURCHASEAMOUNT", precision = 25, scale = 4)
	public BigDecimal getCurrentweeklypurchaseamount() {
		return this.currentweeklypurchaseamount;
	}

	public void setCurrentweeklypurchaseamount(
			BigDecimal currentweeklypurchaseamount) {
		this.currentweeklypurchaseamount = currentweeklypurchaseamount;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "LASTLOPTIME")
	public Timestamp getLastloptime() {
		return this.lastloptime;
	}

	public void setLastloptime(Timestamp lastloptime) {
		this.lastloptime = lastloptime;
	}

	@Column(name = "AUTHORIZEDREPRESENTATIVE", length = 1020)
	public String getAuthorizedrepresentative() {
		return this.authorizedrepresentative;
	}

	public void setAuthorizedrepresentative(String authorizedrepresentative) {
		this.authorizedrepresentative = authorizedrepresentative;
	}

	@Column(name = "REPRESENTATIVENAME", length = 1020)
	public String getRepresentativename() {
		return this.representativename;
	}

	public void setRepresentativename(String representativename) {
		this.representativename = representativename;
	}

	@Column(name = "DESIGNATION", length = 1020)
	public String getDesignation() {
		return this.designation;
	}

	public void setDesignation(String designation) {
		this.designation = designation;
	}

	@Column(name = "FRANCHISEPHONENUMBER", length = 1020)
	public String getFranchisephonenumber() {
		return this.franchisephonenumber;
	}

	public void setFranchisephonenumber(String franchisephonenumber) {
		this.franchisephonenumber = franchisephonenumber;
	}

	@Column(name = "CLASSIFICATION", length = 1020)
	public String getClassification() {
		return this.classification;
	}

	public void setClassification(String classification) {
		this.classification = classification;
	}

	@Column(name = "NUMBEROFOUTLETS", precision = 10, scale = 0)
	public Long getNumberofoutlets() {
		return this.numberofoutlets;
	}

	public void setNumberofoutlets(Long numberofoutlets) {
		this.numberofoutlets = numberofoutlets;
	}

	@Column(name = "INDUSTRYCLASSIFICATION", length = 1020)
	public String getIndustryclassification() {
		return this.industryclassification;
	}

	public void setIndustryclassification(String industryclassification) {
		this.industryclassification = industryclassification;
	}

	@Column(name = "YEARESTABLISHED", precision = 10, scale = 0)
	public Long getYearestablished() {
		return this.yearestablished;
	}

	public void setYearestablished(Long yearestablished) {
		this.yearestablished = yearestablished;
	}

	@Column(name = "AUTHORIZEDFAXNUMBER", length = 1020)
	public String getAuthorizedfaxnumber() {
		return this.authorizedfaxnumber;
	}

	public void setAuthorizedfaxnumber(String authorizedfaxnumber) {
		this.authorizedfaxnumber = authorizedfaxnumber;
	}

	@Column(name = "AUTHORIZEDEMAIL", length = 1020)
	public String getAuthorizedemail() {
		return this.authorizedemail;
	}

	public void setAuthorizedemail(String authorizedemail) {
		this.authorizedemail = authorizedemail;
	}

	@Column(name = "ADMINCOMMENT", length = 1020)
	public String getAdmincomment() {
		return this.admincomment;
	}

	public void setAdmincomment(String admincomment) {
		this.admincomment = admincomment;
	}

	@Column(name = "STATUS", nullable = false, precision = 10, scale = 0)
	public long getStatus() {
		return this.status;
	}

	public void setStatus(long status) {
		this.status = status;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "STATUSTIME", nullable = false)
	public Timestamp getStatustime() {
		return this.statustime;
	}

	public void setStatustime(Timestamp statustime) {
		this.statustime = statustime;
	}

	@Column(name = "RANGECHECK", precision = 10, scale = 0)
	public Long getRangecheck() {
		return this.rangecheck;
	}

	public void setRangecheck(Long rangecheck) {
		this.rangecheck = rangecheck;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchant")
	public Set<MdnRange> getMdnRanges() {
		return this.mdnRanges;
	}

	public void setMdnRanges(Set<MdnRange> mdnRanges) {
		this.mdnRanges = mdnRanges;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchant")
	public Set<LetterOfPurchase> getLetterOfPurchases() {
		return this.letterOfPurchases;
	}

	public void setLetterOfPurchases(Set<LetterOfPurchase> letterOfPurchases) {
		this.letterOfPurchases = letterOfPurchases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchant")
	public Set<BulkLop> getBulkLops() {
		return this.bulkLops;
	}

	public void setBulkLops(Set<BulkLop> bulkLops) {
		this.bulkLops = bulkLops;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merchant")
	public Set<Merchant> getMerchants() {
		return this.merchants;
	}

	public void setMerchants(Set<Merchant> merchants) {
		this.merchants = merchants;
	}
	
	
	
}
