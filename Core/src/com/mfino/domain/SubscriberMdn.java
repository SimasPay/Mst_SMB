package com.mfino.domain;

// Generated Sep 27, 2016 5:23:21 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Type;

import com.mfino.hibernate.Timestamp;

/**
 * SubscriberMdn generated by hbm2java
 */
@Entity
@Table(name = "SUBSCRIBER_MDN", uniqueConstraints = @UniqueConstraint(columnNames = "MDN"))
public class SubscriberMdn extends Base implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	public static final String FieldName_MDN = "mdn";
	public static final String FieldName_StatusTime = "statustime";
	public static final String FieldName_MDNStatus = "status";
	public static final String FieldName_IsMDNRecycled = "ismdnrecycled";
	public static final String FieldName_PocketFromMDNID = "pockets";
	public static final String FieldName_IsForceCloseRequested = "isforcecloserequested";
	public static final String FieldName_LastTransactionTime = "lasttransactiontime";
	public static final String FieldName_Subscriber = "subscriber";
	public static final String FieldName_UpgradeAcctStatus = "upgradeacctstatus";
	private Subscriber subscriber;
	private String mdn;
	private String imsi;
	private String marketingcategory;
	private String idtype;
	private String idnumber;
	private String authenticationphonenumber;
	private Integer status;
	private String authenticationphrase;
	private Integer restrictions;
	private Integer wrongpincount = new Integer(0);
	private String digestedpin;
	private String merchantdigestedpin;
	private String mdnbrand;
	private Timestamp statustime;
	private Timestamp activationtime;
	private Timestamp lasttransactiontime;
	private Long lasttransactionid;
	private String h2hallowedip;
	private Boolean ismdnrecycled;
	private String scramblecode;
	private String otp;
	private Timestamp otpexpirationtime;
	private String applicationid;
	private Boolean isforcecloserequested;
	private String authorizationtoken;
	private String userapikey;
	private String othermdn;
	private Integer otpretrycount;
	private Long cashinfirsttimeid;
	private String isidlifetime;
	private String domaddridentity;
	private String ktpdocumentpath;
	private String subscriberformpath;
	private String supportingdocumentpath;
	private String closecomments;
	private Integer upgradeacctstatus;
	private String upgradeacctapprovedby;
	private String upgradeacctrequestby;
	private Timestamp upgradeaccttime;
	private String upgradeacctcomments;
	private Long closeagent;
	private String closeuser;
	private String ktpid;
	private Timestamp lastapppinchange;
	private String profileImagePath;
	private Set<MoneyClearanceGraved> moneyClearanceGravedsForRefundmdnid = new HashSet<MoneyClearanceGraved>(
			0);
	private Set<MoneyClearanceGraved> moneyClearanceGravedsForMdnid = new HashSet<MoneyClearanceGraved>(
			0);
	private Set<BulkLop> bulkLops = new HashSet<BulkLop>(0);
	private Set<PendingCommodityTransfer> pendingCommodityTransfers = new HashSet<PendingCommodityTransfer>(0);
	private Set<CloseAcctSetlMdn> closeAcctSetlMdns = new HashSet<CloseAcctSetlMdn>(0);
	private Set<Pocket> pockets = new HashSet<Pocket>(0);
	private Set<CommodityTransfer> commodityTransfers = new HashSet<CommodityTransfer>(0);
	private Set<ExcludeSubscriberLc> excludeSubscriberLcs = new HashSet<ExcludeSubscriberLc>(0);
	private Set<LetterOfPurchase> letterOfPurchases = new HashSet<LetterOfPurchase>(0);
	private Set<UnregisteredTxnInfo> unregisteredTxnInfos = new HashSet<UnregisteredTxnInfo>(0);
	private Set<ChannelSessionMgmt> channelSessionMgmts = new HashSet<ChannelSessionMgmt>(0);

	private Long id;
	
	public SubscriberMdn() {
	}

	@Id
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator = "id_Sequence")
	@SequenceGenerator(name = "id_Sequence", sequenceName = "subscriber_mdn_ID_SEQ")
	@Column(name = "ID", unique = true, nullable = false, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}


	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SUBSCRIBERID")
	public Subscriber getSubscriber() {
		return this.subscriber;
	}

	public void setSubscriber(Subscriber subscriber) {
		this.subscriber = subscriber;
	}

	
	@Column(name = "MDN", unique = true, nullable = false, length = 1020)
	public String getMdn() {
		return this.mdn;
	}

	public void setMdn(String mdn) {
		this.mdn = mdn;
	}

	@Column(name = "IMSI", length = 1020)
	public String getImsi() {
		return this.imsi;
	}

	public void setImsi(String imsi) {
		this.imsi = imsi;
	}

	@Column(name = "MARKETINGCATEGORY", length = 1020)
	public String getMarketingcategory() {
		return this.marketingcategory;
	}

	public void setMarketingcategory(String marketingcategory) {
		this.marketingcategory = marketingcategory;
	}

	@Column(name = "IDTYPE", length = 1020)
	public String getIdtype() {
		return this.idtype;
	}

	public void setIdtype(String idtype) {
		this.idtype = idtype;
	}

	@Column(name = "IDNUMBER", length = 1020)
	public String getIdnumber() {
		return this.idnumber;
	}

	public void setIdnumber(String idnumber) {
		this.idnumber = idnumber;
	}

	@Column(name = "AUTHENTICATIONPHONENUMBER", length = 1020)
	public String getAuthenticationphonenumber() {
		return this.authenticationphonenumber;
	}

	public void setAuthenticationphonenumber(String authenticationphonenumber) {
		this.authenticationphonenumber = authenticationphonenumber;
	}

	@Column(name = "STATUS", nullable = false, precision = 10, scale = 0)
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "AUTHENTICATIONPHRASE", length = 1020)
	public String getAuthenticationphrase() {
		return this.authenticationphrase;
	}

	public void setAuthenticationphrase(String authenticationphrase) {
		this.authenticationphrase = authenticationphrase;
	}

	@Column(name = "RESTRICTIONS", nullable = false, precision = 10, scale = 0)
	public Integer getRestrictions() {
		return this.restrictions;
	}

	public void setRestrictions(Integer restrictions) {
		this.restrictions = restrictions;
	}

	@Column(name = "WRONGPINCOUNT")
	public Integer getWrongpincount() {
		return this.wrongpincount;
	}

	public void setWrongpincount(Integer wrongpincount) {
		this.wrongpincount = wrongpincount;
	}

	@Column(name = "DIGESTEDPIN", length = 1020)
	public String getDigestedpin() {
		return this.digestedpin;
	}

	public void setDigestedpin(String digestedpin) {
		this.digestedpin = digestedpin;
	}

	@Column(name = "MERCHANTDIGESTEDPIN", length = 1020)
	public String getMerchantdigestedpin() {
		return this.merchantdigestedpin;
	}

	public void setMerchantdigestedpin(String merchantdigestedpin) {
		this.merchantdigestedpin = merchantdigestedpin;
	}

	@Column(name = "MDNBRAND", length = 1020)
	public String getMdnbrand() {
		return this.mdnbrand;
	}

	public void setMdnbrand(String mdnbrand) {
		this.mdnbrand = mdnbrand;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "STATUSTIME", nullable = false)
	public Timestamp getStatustime() {
		return this.statustime;
	}

	public void setStatustime(Timestamp statustime) {
		this.statustime = statustime;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "ACTIVATIONTIME")
	public Timestamp getActivationtime() {
		return this.activationtime;
	}

	public void setActivationtime(Timestamp activationtime) {
		this.activationtime = activationtime;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "LASTTRANSACTIONTIME")
	public Timestamp getLasttransactiontime() {
		return this.lasttransactiontime;
	}

	public void setLasttransactiontime(Timestamp lasttransactiontime) {
		this.lasttransactiontime = lasttransactiontime;
	}

	@Column(name = "LASTTRANSACTIONID", scale = 0)
	public Long getLasttransactionid() {
		return this.lasttransactionid;
	}

	public void setLasttransactionid(Long lasttransactionid) {
		this.lasttransactionid = lasttransactionid;
	}

	@Column(name = "H2HALLOWEDIP", length = 1020)
	public String getH2hallowedip() {
		return this.h2hallowedip;
	}

	public void setH2hallowedip(String h2hallowedip) {
		this.h2hallowedip = h2hallowedip;
	}

	@Column(name = "ISMDNRECYCLED", precision = 3, scale = 0)
	public Boolean getIsmdnrecycled() {
		return this.ismdnrecycled;
	}

	public void setIsmdnrecycled(Boolean ismdnrecycled) {
		this.ismdnrecycled = ismdnrecycled;
	}

	@Column(name = "SCRAMBLECODE", length = 1020)
	public String getScramblecode() {
		return this.scramblecode;
	}

	public void setScramblecode(String scramblecode) {
		this.scramblecode = scramblecode;
	}

	@Column(name = "OTP", length = 1020)
	public String getOtp() {
		return this.otp;
	}

	public void setOtp(String otp) {
		this.otp = otp;
	}

	@Type(type = "userDefinedTimeStamp")
	@Column(name = "OTPEXPIRATIONTIME")
	public Timestamp getOtpexpirationtime() {
		return this.otpexpirationtime;
	}

	public void setOtpexpirationtime(Timestamp otpexpirationtime) {
		this.otpexpirationtime = otpexpirationtime;
	}

	@Column(name = "APPLICATIONID", length = 1020)
	public String getApplicationid() {
		return this.applicationid;
	}

	public void setApplicationid(String applicationid) {
		this.applicationid = applicationid;
	}

	@Column(name = "ISFORCECLOSEREQUESTED", precision = 3, scale = 0)
	public Boolean getIsforcecloserequested() {
		return this.isforcecloserequested;
	}

	public void setIsforcecloserequested(Boolean isforcecloserequested) {
		this.isforcecloserequested = isforcecloserequested;
	}

	@Column(name = "AUTHORIZATIONTOKEN")
	public String getAuthorizationtoken() {
		return this.authorizationtoken;
	}

	public void setAuthorizationtoken(String authorizationtoken) {
		this.authorizationtoken = authorizationtoken;
	}

	@Column(name = "USERAPIKEY")
	public String getUserapikey() {
		return this.userapikey;
	}

	public void setUserapikey(String userapikey) {
		this.userapikey = userapikey;
	}

	@Column(name = "OTHERMDN", length = 1020)
	public String getOthermdn() {
		return this.othermdn;
	}

	public void setOthermdn(String othermdn) {
		this.othermdn = othermdn;
	}

	@Column(name = "OTPRETRYCOUNT", precision = 10, scale = 0)
	public Integer getOtpretrycount() {
		return this.otpretrycount;
	}

	public void setOtpretrycount(Integer otpretrycount) {
		this.otpretrycount = otpretrycount;
	}

	@Column(name = "CASHINFIRSTTIMEID", scale = 0)
	public Long getCashinfirsttimeid() {
		return this.cashinfirsttimeid;
	}

	public void setCashinfirsttimeid(Long cashinfirsttimeid) {
		this.cashinfirsttimeid = cashinfirsttimeid;
	}

	@Column(name = "ISIDLIFETIME", length = 2)
	public String getIsidlifetime() {
		return this.isidlifetime;
	}

	public void setIsidlifetime(String isidlifetime) {
		this.isidlifetime = isidlifetime;
	}

	@Column(name = "DOMADDRIDENTITY", length = 2)
	public String getDomaddridentity() {
		return this.domaddridentity;
	}

	public void setDomaddridentity(String domaddridentity) {
		this.domaddridentity = domaddridentity;
	}

	@Column(name = "KTPDOCUMENTPATH")
	public String getKtpdocumentpath() {
		return this.ktpdocumentpath;
	}

	public void setKtpdocumentpath(String ktpdocumentpath) {
		this.ktpdocumentpath = ktpdocumentpath;
	}

	@Column(name = "SUBSCRIBERFORMPATH")
	public String getSubscriberformpath() {
		return this.subscriberformpath;
	}

	public void setSubscriberformpath(String subscriberformpath) {
		this.subscriberformpath = subscriberformpath;
	}

	@Column(name = "SUPPORTINGDOCUMENTPATH")
	public String getSupportingdocumentpath() {
		return this.supportingdocumentpath;
	}

	public void setSupportingdocumentpath(String supportingdocumentpath) {
		this.supportingdocumentpath = supportingdocumentpath;
	}

	@Column(name = "CLOSECOMMENTS", length = 512)
	public String getClosecomments() {
		return this.closecomments;
	}

	public void setClosecomments(String closecomments) {
		this.closecomments = closecomments;
	}

	@Column(name = "UPGRADEACCTSTATUS", precision = 22, scale = 0)
	public Integer getUpgradeacctstatus() {
		return this.upgradeacctstatus;
	}

	public void setUpgradeacctstatus(Integer upgradeacctstatus) {
		this.upgradeacctstatus = upgradeacctstatus;
	}

	@Column(name = "UPGRADEACCTAPPROVEDBY")
	public String getUpgradeacctapprovedby() {
		return this.upgradeacctapprovedby;
	}

	public void setUpgradeacctapprovedby(String upgradeacctapprovedby) {
		this.upgradeacctapprovedby = upgradeacctapprovedby;
	}

	@Column(name = "UPGRADEACCTREQUESTBY")
	public String getUpgradeacctrequestby() {
		return upgradeacctrequestby;
	}

	public void setUpgradeacctrequestby(String upgradeacctrequestby) {
		this.upgradeacctrequestby = upgradeacctrequestby;
	}
	
	@Type(type = "userDefinedTimeStamp")
	@Column(name = "UPGRADEACCTTIME")
	public Timestamp getUpgradeaccttime() {
		return this.upgradeaccttime;
	}

	public void setUpgradeaccttime(Timestamp upgradeaccttime) {
		this.upgradeaccttime = upgradeaccttime;
	}

	@Column(name = "UPGRADEACCTCOMMENTS")
	public String getUpgradeacctcomments() {
		return this.upgradeacctcomments;
	}

	public void setUpgradeacctcomments(String upgradeacctcomments) {
		this.upgradeacctcomments = upgradeacctcomments;
	}

	@Column(name = "CLOSEAGENT", scale = 0)
	public Long getCloseagent() {
		return this.closeagent;
	}

	public void setCloseagent(Long closeagent) {
		this.closeagent = closeagent;
	}

	@Column(name = "CLOSEUSER")
	public String getCloseuser() {
		return this.closeuser;
	}

	public void setCloseuser(String closeuser) {
		this.closeuser = closeuser;
	}

	@Column(name = "KTPID", length = 50)
	public String getKtpid() {
		return this.ktpid;
	}

	public void setKtpid(String ktpid) {
		this.ktpid = ktpid;
	}
	
	@Type(type = "userDefinedTimeStamp")
	@Column(name = "LASTAPPPINCHANGE")
	public Timestamp getLastapppinchange() {
		return this.lastapppinchange;
	}

	public void setLastapppinchange(Timestamp lastapppinchange) {
		this.lastapppinchange = lastapppinchange;
	}
	
	@Column(name = "PROFILEIMAGEPATH")
	public String getProfileImagePath() {
		return this.profileImagePath;
	}

	public void setProfileImagePath(String profileImagePath) {
		this.profileImagePath = profileImagePath;
	}	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriberMdnByRefundmdnid")
	public Set<MoneyClearanceGraved> getMoneyClearanceGravedsForRefundmdnid() {
		return this.moneyClearanceGravedsForRefundmdnid;
	}

	public void setMoneyClearanceGravedsForRefundmdnid(
			Set<MoneyClearanceGraved> moneyClearanceGravedsForRefundmdnid) {
		this.moneyClearanceGravedsForRefundmdnid = moneyClearanceGravedsForRefundmdnid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriberMdnByMdnid")
	public Set<MoneyClearanceGraved> getMoneyClearanceGravedsForMdnid() {
		return this.moneyClearanceGravedsForMdnid;
	}

	public void setMoneyClearanceGravedsForMdnid(
			Set<MoneyClearanceGraved> moneyClearanceGravedsForMdnid) {
		this.moneyClearanceGravedsForMdnid = moneyClearanceGravedsForMdnid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriberMdn")
	public Set<BulkLop> getBulkLops() {
		return this.bulkLops;
	}

	public void setBulkLops(Set<BulkLop> bulkLops) {
		this.bulkLops = bulkLops;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriberMdn")
	public Set<PendingCommodityTransfer> getPendingCommodityTransfers() {
		return this.pendingCommodityTransfers;
	}

	public void setPendingCommodityTransfers(
			Set<PendingCommodityTransfer> pendingCommodityTransfers) {
		this.pendingCommodityTransfers = pendingCommodityTransfers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriberMdn")
	public Set<CloseAcctSetlMdn> getCloseAcctSetlMdns() {
		return this.closeAcctSetlMdns;
	}

	public void setCloseAcctSetlMdns(Set<CloseAcctSetlMdn> closeAcctSetlMdns) {
		this.closeAcctSetlMdns = closeAcctSetlMdns;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriberMdn")
	public Set<Pocket> getPockets() {
		return this.pockets;
	}

	public void setPockets(Set<Pocket> pockets) {
		this.pockets = pockets;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriberMdn")
	public Set<CommodityTransfer> getCommodityTransfers() {
		return this.commodityTransfers;
	}

	public void setCommodityTransfers(Set<CommodityTransfer> commodityTransfers) {
		this.commodityTransfers = commodityTransfers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriberMdn")
	public Set<ExcludeSubscriberLc> getExcludeSubscriberLcs() {
		return this.excludeSubscriberLcs;
	}

	public void setExcludeSubscriberLcs(
			Set<ExcludeSubscriberLc> excludeSubscriberLcs) {
		this.excludeSubscriberLcs = excludeSubscriberLcs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriberMdn")
	public Set<LetterOfPurchase> getLetterOfPurchases() {
		return this.letterOfPurchases;
	}

	public void setLetterOfPurchases(Set<LetterOfPurchase> letterOfPurchases) {
		this.letterOfPurchases = letterOfPurchases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriberMdn")
	public Set<UnregisteredTxnInfo> getUnregisteredTxnInfos() {
		return this.unregisteredTxnInfos;
	}

	public void setUnregisteredTxnInfos(
			Set<UnregisteredTxnInfo> unregisteredTxnInfos) {
		this.unregisteredTxnInfos = unregisteredTxnInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscriberMdn")
	public Set<ChannelSessionMgmt> getChannelSessionMgmts() {
		return this.channelSessionMgmts;
	}

	public void setChannelSessionMgmts(
			Set<ChannelSessionMgmt> channelSessionMgmts) {
		this.channelSessionMgmts = channelSessionMgmts;
	}

}
