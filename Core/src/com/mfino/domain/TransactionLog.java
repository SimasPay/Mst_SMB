package com.mfino.domain;

// Generated Sep 27, 2016 5:23:21 PM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Clob;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Version;

/**
 * TransactionLog generated by hbm2java
 */
@Entity
@Table(name = "TRANSACTION_LOG")
public class TransactionLog implements java.io.Serializable {

	private BigDecimal id;
	private long version;
	private MfinoServiceProvider mfinoServiceProvider;
	private Serializable lastupdatetime;
	private String updatedby;
	private Serializable createtime;
	private String createdby;
	private BigDecimal parenttransactionid;
	private Long multixid;
	private Serializable transactiontime;
	private long messagecode;
	private Clob messagedata;
	private Set<CommodityTransfer> commodityTransfers = new HashSet<CommodityTransfer>(
			0);
	private Set<PendingCommodityTransfer> pendingCommodityTransfers = new HashSet<PendingCommodityTransfer>(
			0);
	private Set<LetterOfPurchase> letterOfPurchases = new HashSet<LetterOfPurchase>(
			0);

	public TransactionLog() {
	}

	public TransactionLog(BigDecimal id,
			MfinoServiceProvider mfinoServiceProvider,
			Serializable lastupdatetime, String updatedby,
			Serializable createtime, String createdby,
			Serializable transactiontime, long messagecode, Clob messagedata) {
		this.id = id;
		this.mfinoServiceProvider = mfinoServiceProvider;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
		this.transactiontime = transactiontime;
		this.messagecode = messagecode;
		this.messagedata = messagedata;
	}

	public TransactionLog(BigDecimal id,
			MfinoServiceProvider mfinoServiceProvider,
			Serializable lastupdatetime, String updatedby,
			Serializable createtime, String createdby,
			BigDecimal parenttransactionid, Long multixid,
			Serializable transactiontime, long messagecode, Clob messagedata,
			Set<CommodityTransfer> commodityTransfers,
			Set<PendingCommodityTransfer> pendingCommodityTransfers,
			Set<LetterOfPurchase> letterOfPurchases) {
		this.id = id;
		this.mfinoServiceProvider = mfinoServiceProvider;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
		this.parenttransactionid = parenttransactionid;
		this.multixid = multixid;
		this.transactiontime = transactiontime;
		this.messagecode = messagecode;
		this.messagedata = messagedata;
		this.commodityTransfers = commodityTransfers;
		this.pendingCommodityTransfers = pendingCommodityTransfers;
		this.letterOfPurchases = letterOfPurchases;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@Version
	@Column(name = "VERSION", nullable = false, precision = 10, scale = 0)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MSPID", nullable = false)
	public MfinoServiceProvider getMfinoServiceProvider() {
		return this.mfinoServiceProvider;
	}

	public void setMfinoServiceProvider(
			MfinoServiceProvider mfinoServiceProvider) {
		this.mfinoServiceProvider = mfinoServiceProvider;
	}

	@Column(name = "LASTUPDATETIME", nullable = false)
	public Serializable getLastupdatetime() {
		return this.lastupdatetime;
	}

	public void setLastupdatetime(Serializable lastupdatetime) {
		this.lastupdatetime = lastupdatetime;
	}

	@Column(name = "UPDATEDBY", nullable = false, length = 1020)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Column(name = "CREATETIME", nullable = false)
	public Serializable getCreatetime() {
		return this.createtime;
	}

	public void setCreatetime(Serializable createtime) {
		this.createtime = createtime;
	}

	@Column(name = "CREATEDBY", nullable = false, length = 1020)
	public String getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	@Column(name = "PARENTTRANSACTIONID", scale = 0)
	public BigDecimal getParenttransactionid() {
		return this.parenttransactionid;
	}

	public void setParenttransactionid(BigDecimal parenttransactionid) {
		this.parenttransactionid = parenttransactionid;
	}

	@Column(name = "MULTIXID", precision = 10, scale = 0)
	public Long getMultixid() {
		return this.multixid;
	}

	public void setMultixid(Long multixid) {
		this.multixid = multixid;
	}

	@Column(name = "TRANSACTIONTIME", nullable = false)
	public Serializable getTransactiontime() {
		return this.transactiontime;
	}

	public void setTransactiontime(Serializable transactiontime) {
		this.transactiontime = transactiontime;
	}

	@Column(name = "MESSAGECODE", nullable = false, precision = 10, scale = 0)
	public long getMessagecode() {
		return this.messagecode;
	}

	public void setMessagecode(long messagecode) {
		this.messagecode = messagecode;
	}

	@Column(name = "MESSAGEDATA", nullable = false)
	public Clob getMessagedata() {
		return this.messagedata;
	}

	public void setMessagedata(Clob messagedata) {
		this.messagedata = messagedata;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transactionLog")
	public Set<CommodityTransfer> getCommodityTransfers() {
		return this.commodityTransfers;
	}

	public void setCommodityTransfers(Set<CommodityTransfer> commodityTransfers) {
		this.commodityTransfers = commodityTransfers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transactionLog")
	public Set<PendingCommodityTransfer> getPendingCommodityTransfers() {
		return this.pendingCommodityTransfers;
	}

	public void setPendingCommodityTransfers(
			Set<PendingCommodityTransfer> pendingCommodityTransfers) {
		this.pendingCommodityTransfers = pendingCommodityTransfers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transactionLog")
	public Set<LetterOfPurchase> getLetterOfPurchases() {
		return this.letterOfPurchases;
	}

	public void setLetterOfPurchases(Set<LetterOfPurchase> letterOfPurchases) {
		this.letterOfPurchases = letterOfPurchases;
	}

}
