package com.mfino.domain;

// Generated Sep 27, 2016 5:23:21 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.mfino.hibernate.Timestamp;

/**
 * Biller generated by hbm2java
 */
@Entity
@Table(name = "BILLER", uniqueConstraints = {
		@UniqueConstraint(columnNames = "BILLERNAME"),
		@UniqueConstraint(columnNames = { "BANKCODE", "BILLERCODE" }) })
public class Biller extends Base  implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	public static final String FieldName_BankCodeForRouting = "bankcode";
	public static final String FieldName_BillerName = "billername";
	public static final String FieldName_BillerCode = "billercode";
	public static final String FieldName_BillerType = "billertype";
	
	private Company company;
	private long bankcode;
	private String billercode;
	private String billername;
	private String billertype;
	private BigDecimal transactionfee;
	private long billrefoffset;
	private Set<Denomination> denominations = new HashSet<Denomination>(0);

	public Biller() {
	}

	public Biller(BigDecimal id, Timestamp lastupdatetime, String updatedby,
			Timestamp createtime, String createdby, long bankcode,
			String billercode, long billrefoffset) {
		this.id = id;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
		this.bankcode = bankcode;
		this.billercode = billercode;
		this.billrefoffset = billrefoffset;
	}

	public Biller(BigDecimal id, Company company, Timestamp lastupdatetime,
			String updatedby, Timestamp createtime, String createdby,
			long bankcode, String billercode, String billername,
			String billertype, BigDecimal transactionfee, long billrefoffset,
			Set<Denomination> denominations) {
		this.id = id;
		this.company = company;
		this.lastupdatetime = lastupdatetime;
		this.updatedby = updatedby;
		this.createtime = createtime;
		this.createdby = createdby;
		this.bankcode = bankcode;
		this.billercode = billercode;
		this.billername = billername;
		this.billertype = billertype;
		this.transactionfee = transactionfee;
		this.billrefoffset = billrefoffset;
		this.denominations = denominations;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COMPANYID")
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	
	@Column(name = "BANKCODE", nullable = false, precision = 10, scale = 0)
	public long getBankcode() {
		return this.bankcode;
	}

	public void setBankcode(long bankcode) {
		this.bankcode = bankcode;
	}

	@Column(name = "BILLERCODE", nullable = false, length = 1020)
	public String getBillercode() {
		return this.billercode;
	}

	public void setBillercode(String billercode) {
		this.billercode = billercode;
	}

	@Column(name = "BILLERNAME", unique = true, length = 1020)
	public String getBillername() {
		return this.billername;
	}

	public void setBillername(String billername) {
		this.billername = billername;
	}

	@Column(name = "BILLERTYPE", length = 1020)
	public String getBillertype() {
		return this.billertype;
	}

	public void setBillertype(String billertype) {
		this.billertype = billertype;
	}

	@Column(name = "TRANSACTIONFEE", precision = 25, scale = 4)
	public BigDecimal getTransactionfee() {
		return this.transactionfee;
	}

	public void setTransactionfee(BigDecimal transactionfee) {
		this.transactionfee = transactionfee;
	}

	@Column(name = "BILLREFOFFSET", nullable = false, precision = 10, scale = 0)
	public long getBillrefoffset() {
		return this.billrefoffset;
	}

	public void setBillrefoffset(long billrefoffset) {
		this.billrefoffset = billrefoffset;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "biller")
	public Set<Denomination> getDenominations() {
		return this.denominations;
	}

	public void setDenominations(Set<Denomination> denominations) {
		this.denominations = denominations;
	}

}
