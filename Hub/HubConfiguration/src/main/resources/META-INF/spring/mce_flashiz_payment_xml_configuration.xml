<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:camel="http://camel.apache.org/schema/spring" 
	xmlns:broker="http://activemq.apache.org/schema/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:cxf="http://camel.apache.org/schema/cxf" 
	xmlns:osgix="http://www.springframework.org/schema/osgi-compendium"
	xmlns:http="http://cxf.apache.org/transports/http/configuration"
	xmlns:sec="http://cxf.apache.org/configuration/security"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	    http://www.springframework.org/schema/beans/spring-beans.xsd 
	    http://camel.apache.org/schema/spring  
	    http://camel.apache.org/schema/spring/camel-spring.xsd
	    http://www.springframework.org/schema/osgi   
	    http://www.springframework.org/schema/osgi/spring-osgi.xsd 
	    http://www.springframework.org/schema/osgi-compendium 
	    http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium.xsd
	    http://www.springframework.org/schema/context 
	    http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
       	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	    http://activemq.apache.org/schema/core 
	    http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd 
	    http://camel.apache.org/schema/cxf
		http://camel.apache.org/schema/cxf/camel-cxf.xsd 
		http://cxf.apache.org/transports/http/configuration 
		http://cxf.apache.org/schemas/configuration/http-conf.xsd
		http://cxf.apache.org/configuration/security 
		http://cxf.apache.org/schemas/configuration/security.xsd
		http://cxf.apache.org/jaxws 
		http://cxf.apache.org/schemas/jaxws.xsd">

	<context:annotation-config />
	<osgi:reference id="pocketServiceImpl" bean-name="PocketServiceImpl" interface="com.mfino.service.PocketService"/>
	<osgi:reference id="billerServiceImpl" bean-name="BillerServiceImpl" interface="com.mfino.service.BillerService"/>
	<osgi:reference id="subscriberServiceImpl" bean-name="SubscriberServiceImpl" interface="com.mfino.service.SubscriberService" />
	<osgi:reference id="systemParametersServiceImpl" bean-name="SystemParametersServiceImpl" interface="com.mfino.service.SystemParametersService"/>
	
	<!-- define the jasypt properties parser with the given password to be used -->
	<bean id="jasypt"
		class="org.apache.camel.component.jasypt.JasyptPropertiesParser">
		<property name="password" value="sysenv:ENCRYPTION_KEY" />
		<property name="algorithm" value="PBEWITHMD5ANDTRIPLEDES" />
	</bean>

	<!-- define the camel properties component -->
	<bean id="properties"
		class="org.apache.camel.component.properties.PropertiesComponent">
		<!-- the properties file is in the classpath -->
		<property name="location" value="file:mfino_conf/mce.properties" />
		<!-- and let it leverage the jasypt parser -->
		<property name="propertiesParser" ref="jasypt" />
	</bean>

	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:mfino_conf/mce.properties</value>
			</list>
		</property>
	</bean>

	<osgi:reference id="pooledConnectionFactory" interface="javax.jms.ConnectionFactory"/>
	<bean id="jmsConfig" 
		class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="pooledConnectionFactory"/>
		<property name="concurrentConsumers" value="${concurrentConsumers}"/>
 	</bean>
 
	<bean id="jms" 
		class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="configuration" ref="jmsConfig"/>
	</bean>

	<osgi:reference id="billPaymentsService" interface="com.mfino.billpayments.service.BillPaymentsService"/>
	
	<osgi:reference id="billPayNotificationService" interface="com.mfino.billpayments.service.BillPayNotificationService"/>
	
		
	<osgi:reference id="billPayBillerIntegrationService" interface="com.mfino.billpayments.service.BillPayBillerIntegrationService"/>
	
	<osgi:reference id="bankService" interface="com.mfino.mce.backend.BankService"/>

	<osgi:reference id="billPayPendingResolveService" interface="com.mfino.billpayments.service.BillPayPendingResolveService"/>

	<osgi:reference id="txManager" interface="org.springframework.orm.hibernate3.HibernateTransactionManager" />
	
<!-- 	<osgi:reference id="sessionFactory" interface="org.hibernate.SessionFactory"/>
	
	<osgi:reference id="hibernateSessionHolder" interface="com.mfino.hibernate.session.HibernateSessionHolder"/>
	 -->

	
	<bean id="billpaymentsPendingClearanceService" class="com.mfino.billpayments.service.impl.BillpaymentsPendingClearanceServiceImpl">
		<property name="billPaymentsService" ref="billPaymentsService" />
		<property name="integrationCode" value="flashiz"/>
	</bean>	
	
	<bean id="billPayEventProcessingService" class="com.mfino.billpayments.flashiz.BillPayEventProcessingServiceFlashizImpl">
		 
		<property name="billPaymentsService" ref="billPaymentsService"/>	
		<property name="subscriberService" ref="subscriberServiceImpl" />
		<property name="systemParametersService" ref="systemParametersServiceImpl" />
	</bean>	
	<bean id="billPayMoneyTransferService" class="com.mfino.billpayments.flashiz.FlashizBillPayMoneyTransferServiceImpl">
		<property name="htm" ref="txManager" />
	 	<property name="billPaymentsService" ref="billPaymentsService"/>
		<property name="bankService" ref="bankService"/>
		<property name="billerService" ref="billerServiceImpl" />
		<property name="pocketService" ref="pocketServiceImpl" />
   </bean>	
	
	<bean id="flashizBillPay" class="com.mfino.billpayments.flashiz.BillPaymentProcessor">
	 	<property name="billPaymentsService" ref="billPaymentsService"/>
	 	<property name="subscriberService" ref="subscriberServiceImpl" />
	</bean>	
	

	<!-- <bean id="flashizBillPayClear" class="com.mfino.billpayments.flashiz.BillPaymentPendingClearProcessor">
	 	<property name="billPaymentsService" ref="billPaymentsService"/>
	 	<property name="subscriberService" ref="subscriberServiceImpl" />
	</bean>	-->
	
	
	<camelContext id="flashizContext" xmlns="http://camel.apache.org/schema/spring">
	    
	    

	<!-- Starting point for quick teller bill pay integrations -->

		<route> 
			<from uri="jms:flashizBillPayQueue?disableReplyTo=true" />
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMQRPaymentInquiry'</simple> <!-- Inquiry Flow -->
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferInquirySourceToSuspense"/>
				<filter>
					<simple>${body.response} is 'com.mfino.fix.CmFinoFIX$CMTransferInquiryToBank'</simple> 
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_INQ_TO_BANK</constant>        
					</setHeader>
					<multicast>
					    <to uri="jms:FlashizPayEventProcessingQueue?disableReplyTo=true" />
                        <to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>
					</multicast>
				</filter>
				<filter>
					<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple> <!-- money transfer inquiry is completed, proceed to bill payment inquiry -->
					<filter>
					<simple>${body.response.result} == '0'</simple>
					<setHeader headerName="eventContext">
						<!-- <simple resultType="java.lang.String" >SRC_SUSPENSE_INQ_SUCCESS</simple> -->
						<constant>SRC_SUSPENSE_INQ_SUCCESS</constant> 
					</setHeader>
						<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
					</filter>
				</filter>
				<filter>
					<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple> 
					<filter>
					<simple>${body.response.result} != '0'</simple>
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_INQ_FAILED</constant>        
					</setHeader>
					<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
					</filter>
				</filter>
			</filter>
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMQRPayment'</simple> <!-- Confirmation Flow -->
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferConfirmationSourceToSuspense"/>
				<filter>
					<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple>
					<filter>
						<simple>${body.response.result} == '0'</simple>
						<setHeader headerName="eventContext">
							<constant>SRC_SUSPENSE_CONFIRMATION_SUCCESS</constant>        
						</setHeader>
						<multicast>
							<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
							<to uri="jms:flashizBillPayConfirmationQueue?disableReplyTo=true"/>
						</multicast>
					</filter>
				</filter>
				<filter>
					<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple> <!-- money transfer inquiry is completed, proceed to bill payment inquiry -->
					<filter>
						<simple>${body.response.result} != '0'</simple>
						<setHeader headerName="eventContext">
							<constant>SRC_SUSPENSE_CONFIRMATION_FAILED</constant>        
						</setHeader>
						<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
					</filter>
				</filter>
				<filter>
					<simple>${body.response} is 'com.mfino.fix.CmFinoFIX$CMMoneyTransferToBank'</simple> <!-- give this to front end as it needs to go to bank -->
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_CONFIRMATION_TO_BANK</constant>        
					</setHeader>
					<multicast>
						<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
						<to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>
					</multicast>					
				</filter>
			</filter>
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMBillPayPendingRequest'</simple> <!-- pending resolve Flow -->
				<to uri="bean:billPayPendingResolveService?method=resolvePendingTransaction"/>
				<filter>
					<simple>${body.destinationQueue} == null</simple>
					<to uri="jms:notificationQueue?disableReplyTo=true"/>
				</filter>
				<filter>
					<simple>${body.destinationQueue} != null</simple>
					<recipientList>
						<simple>${body.nextQueue},jms:notificationQueue?disableReplyTo=true</simple>
					</recipientList>
				</filter>
			</filter>
			
		</route>
		
		<!-- response from front end for source to suspense-->

		<route> 
			<from uri="jms:flashizSourceToSuspenseBRQueue?disableReplyTo=true"/>
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMTransferInquiryToBank'</simple>
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferInquirySourceToSuspenseCompleted"/>
				<filter>
					<simple>${body.response.result} == '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_INQ_SUCCESS</constant>        
					</setHeader>
					<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
				<filter>
					<simple>${body.response.result} != '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_INQ_FAILED</constant>        
					</setHeader>
					<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
			</filter>
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMMoneyTransferToBank' and {body.response} is 'com.mfino.fix.CmFinoFIX$CMMoneyTransferFromBank'</simple>
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferConfirmationSourceToSuspenseCompleted"/>
				<filter>
					<simple>${body.response.result} == '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_CONFIRMATION_SUCCESS</constant>        
					</setHeader>
					<multicast>
						<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
						<to uri="jms:flashziBillPayConfirmationQueue?disableReplyTo=true"/>
					</multicast>
				</filter>
				<filter>
					<simple>${body.response.result} != '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_CONFIRMATION_FAILED</constant>        
					</setHeader>
					<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
			</filter>			
		</route>

		<!-- response from front end for suspense to destination -->

		<route> 
			<from uri="jms:flashizSuspenseToDestBRQueue?disableReplyTo=true"/>
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMTransferInquiryToBank'</simple>
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferInquirySuspenceToDestinationCompleted"/>
				<filter>
					<simple>${body.response.result} == '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_INQ_SUCCESS</constant>        
					</setHeader>
					<multicast>
						<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
						<to uri="direct:moneyTransferConfirmationSuspenseToDestination"/>
					</multicast>
				</filter>
				<filter>
					<simple>${body.response.result} != '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_INQ_FAILED</constant>        
					</setHeader>
					<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
			</filter>
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMMoneyTransferToBank'</simple>
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferConfirmationSuspenseToDestinationCompleted"/>
				<filter>
					<simple>${body.response.result} == '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_CONFIRMATION_SUCCESS</constant>        
					</setHeader>
					<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
				<filter>
					<simple>${body.response.result} != '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_CONFIRMATION_FAILED</constant>        
					</setHeader>
					<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
			</filter>			
		</route>
		<route> 
			<from uri="jms:flashizBillPayConfirmationQueue?disableReplyTo=true" />

			<setHeader headerName="eventContext">
				<constant>BILLER_CONFIRMATION_PENDING</constant>        
			</setHeader>
			<multicast>
				<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
				<to uri="direct:flashizBillPaymentQueue"/>	
			</multicast>
		</route>

		<!-- route for bill confirmation to Flashiz -->

		<route>
			<from uri="direct:flashizBillPaymentQueue"/>
			<to uri="bean:billPayBillerIntegrationService?method=preBillerConfirmation"/>
			<to uri="bean:flashizBillPay?method=constructRequestMessage"/>
			<to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>
		</route>
		
		<!-- route for bill confirmation Response From Flashiz -->
		<route>
			<from uri="jms:flashizBillPaymentResponseQueue?disableReplyTo=true"/>
			<filter>
				<simple>${body.response} is 'com.mfino.fix.CmFinoFIX$CMPaymentAcknowledgementFromBank'</simple> 
				<to uri="bean:flashizBillPay?method=constructReplyMessage"/>
					<setHeader headerName="eventContext">
						<constant>BILLER_CONFIRMATION_COMPLETED</constant>        
					</setHeader>
					<multicast>
						<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
						<to uri="direct:FlashizbillPayConfirmationResponseQueue"/>
					</multicast>
			</filter>
			<filter>
				<simple>${body.response} is 'com.mfino.domain.NoISOResponseMsg'</simple> 
				<log message="mce_flashiz_payment_xml_configuration NoISOResponseMsg: Do Nothing as this request need to be processing state."/>
			</filter>
		</route>
		
		<!-- Handle bill pay confirmation response -->
		<route>
			<from uri="direct:FlashizbillPayConfirmationResponseQueue"/>
			<to uri="bean:billPayBillerIntegrationService?method=handleBillPayConfirmationResponse"/>
			<filter>
				<simple>${body.response.result} == '0'</simple> <!-- check if response == CmFinoFIX.ResponseCode_Success -->
				<setHeader headerName="eventContext">
					<constant>BILLER_CONFIRMATION_SUCCESSFUL</constant>        
				</setHeader>
				<multicast>
					<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>			
					<to uri="jms:flashizmoneyTransferInquirySuspenseToDestination?disableReplyTo=true"/>
				</multicast>
			</filter>
			<filter>
				<simple>${body.response.result} == '1'</simple> <!-- check if response == CmFinoFIX.ResponseCode_Success -->
				<!-- Amount should be reverted from suspense and charges to source and failure notification should be sent out, coming soon :) -->
				<setHeader headerName="eventContext">
					<constant>BILLER_CONFIRMATION_FAILED</constant>        
				</setHeader>
				<multicast>
					<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
					<to uri="jms:flashizsuspenseAndChargesToSourceReversal?disableReplyTo=true"/>
				</multicast>			
			</filter>		
		</route>

		<!-- route for money transfer inquiry (suspense to destination) -->

		<route>
			<from uri="jms:flashizmoneyTransferInquirySuspenseToDestination?disableReplyTo=true"/>
				<log message="mce_flashiz_payment_xml_configuration#flashizmoneyTransferInquirySuspenseToDestination"/>
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferInquirySuspenseToDestination"/>
				<filter>
					<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple> 
					<filter>
						<simple>${body.response.result} == '0'</simple>
						<setHeader headerName="eventContext">
							<constant>SUSPENSE_DEST_INQ_SUCCESS</constant>        
						</setHeader>
						<multicast>
							<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
							<to uri="direct:moneyTransferConfirmationSuspenseToDestination"/>
						</multicast>
					</filter>
				</filter>
				<filter>
					<simple>${body.response} is 'com.mfino.fix.CmFinoFIX$CMTransferInquiryToBank'</simple>
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_INQ_TO_BANK</constant>        
					</setHeader>
					<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
					<to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>
				</filter>
				<!-- What if suspense to destination inquiry fails?	-->
				<filter>
					<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple> 
					<filter>
						<simple>${body.response.result} != '0'</simple>
						<setHeader headerName="eventContext">
							<constant>SUSPENSE_DEST_INQ_FAILED</constant>        
						</setHeader>
						<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
					</filter>
				</filter>
		</route>

		<!-- route for money transfer confirmation (suspense to destination) -->
		<route>
			<from uri="direct:moneyTransferConfirmationSuspenseToDestination"/>
			<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferConfirmationSuspenseToDestination"/>
			<filter>
				<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple>
				<filter>
					<simple>${body.response.result} == '0'</simple>
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_CONFIRMATION_SUCCESS</constant>        
					</setHeader>
					<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
			</filter>
			<filter>
				<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple>
				<filter>
					<simple>${body.response.result} != '0'</simple>
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_CONFIRMATION_FAILED</constant>        
					</setHeader>
					<to uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
			</filter>
			<filter>
				<simple>${body.response} is 'com.mfino.fix.CmFinoFIX$CMMoneyTransferToBank'</simple>
				<setHeader headerName="eventContext">
					<constant>SUSPENSE_DEST_CONFIRMATION_TO_BANK</constant>        
				</setHeader>
				<to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>						
			</filter>
		</route>

		<route>
			<from uri="jms:flashizsuspenseAndChargesToSourceReversal"/>
			<to uri="bean:billPayMoneyTransferService?method=suspenseAndChargesToSourceReversal"/>
			<to uri="jms:autoReversalQueue?disableReplyTo=true"/>
		</route>

		<route>
			<from uri="jms:flashizSuspenseAndChargesRRQueue?disableReplyTo=true"/>
			<log message="mce_flashiz_payment_xml_configuration#FlashizbillpaymentsuspenseAndChargesRRQueue"/>
			<filter>
				<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple>
				<filter>
					<simple>${body.response.result} == '0'</simple>
					<to uri="jms:notificationQueue?disableReplyTo=true"/>
				</filter>
			</filter>
		</route>

		<!-- Batch process to handle failed suspense to destination transactions.-->
      <!-- Batch process to query and resolve pending transactions -->
		
		
		<!--<route>
			<from uri="timer://clickatellPendingBillPayClearTimer?fixedRate=true&amp;period={{clickatell_pending_fetch_time}}"/>
	        <log message="mce_smart_clickatell_billpay_configuration#fromuri=clickatellPendingBillPayClearTimer"/>
	        <delay>
	            <constant>600000</constant>
	        </delay>
	        <split>
	            <method method="clearBillerConfirmationPendingTransactions" bean="billpaymentsPendingClearanceService"></method>
				<throttle timePeriodMillis="15000">
					<constant>1</constant>	            
		            <to uri="direct:clickatellQueryTransactionCommunicatorQueue"/>
		        </throttle>
	        </split>
	    </route>
	    <route>
			<from uri="direct:clickatellQueryTransactionCommunicatorQueue"/>
			<to uri="bean:clickatellBillPayClear?method=constructRequestMessage"/>
			<to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>
		</route> -->

		<!-- route for bill pay event processing queue end -->		

		<route>
			<from uri="jms:FlashizbillPayEventProcessingQueue?disableReplyTo=true"/>
			<setHeader headerName="eventContext">
				<simple>${in.header.eventContext}</simple>
			</setHeader>
			
			<filter>
				<simple>${in.header.eventContext} == 'SRC_SUSPENSE_INQ_FAILED'</simple>
				<to uri="bean:billPayEventProcessingService?method=SRC_SUSPENSE_INQ_FAILED"/>
				<to uri="jms:notificationQueue?disableReplyTo=true"/>
			</filter>

			<filter>
				<simple>${in.header.eventContext} == 'SRC_SUSPENSE_CONFIRMATION_FAILED'</simple>
				<to uri="bean:billPayEventProcessingService?method=SRC_SUSPENSE_CONFIRMATION_FAILED"/>
				<to uri="jms:notificationQueue?disableReplyTo=true"/>
			</filter>

			<filter>
				<simple>${in.header.eventContext} == 'SRC_SUSPENSE_INQ_SUCCESS'</simple>
				<to uri="bean:billPayEventProcessingService?method=SRC_SUSPENSE_INQ_SUCCESS"/>
				<to uri="jms:notificationQueue?disableReplyTo=true"/>
			</filter>
            
			<filter>
				<simple>${in.header.eventContext} == 'BILLER_INQUIRY_COMPLETED'</simple>
				<to uri="bean:billPayEventProcessingService?method=BILLER_INQUIRY_COMPLETED"/>
				<to uri="jms:notificationQueue?disableReplyTo=true"/>
			</filter>
			
			<filter>
				<simple>${in.header.eventContext} == 'BILLER_CONFIRMATION_FAILED'</simple>
				<to uri="bean:billPayEventProcessingService?method=BILLER_CONFIRMATION_FAILED"/>
				<to uri="jms:notificationQueue?disableReplyTo=true"/>
			</filter>

			<filter>
				<simple>${in.header.eventContext} == 'BILLER_CONFIRMATION_SUCCESSFUL'</simple>
				<to uri="bean:billPayEventProcessingService?method=BILLER_CONFIRMATION_SUCCESSFUL"/>
				<to uri="jms:notificationQueue?disableReplyTo=true"/>
			</filter>
		</route>

	</camelContext>

	<bean id="camelTracer" class="org.apache.camel.processor.interceptor.Tracer">
		<property name="traceOutExchanges" value="true" />
	</bean>

	<bean id="traceFormatter"
		class="org.apache.camel.processor.interceptor.DefaultTraceFormatter">
		<property name="showOutBody" value="true" />
		<property name="showOutBodyType" value="true" />
	</bean>
	
		<tx:annotation-driven transaction-manager="txManager" />	
</beans>