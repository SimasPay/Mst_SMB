<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:camel="http://camel.apache.org/schema/spring" 
	xmlns:broker="http://activemq.apache.org/schema/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:cxf="http://camel.apache.org/schema/cxf" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:osgix="http://www.springframework.org/schema/osgi-compendium"
	xmlns:http="http://cxf.apache.org/transports/http/configuration"
	xmlns:sec="http://cxf.apache.org/configuration/security"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	    http://www.springframework.org/schema/beans/spring-beans.xsd 
	    http://camel.apache.org/schema/spring  
	    http://camel.apache.org/schema/spring/camel-spring.xsd
	    http://www.springframework.org/schema/osgi   
	    http://www.springframework.org/schema/osgi/spring-osgi.xsd 
	    http://www.springframework.org/schema/osgi-compendium 
	    http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium.xsd 
	    http://www.springframework.org/schema/context 
	    http://www.springframework.org/schema/context/spring-context.xsd 
	    http://www.springframework.org/schema/tx 
       	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	    http://activemq.apache.org/schema/core 
	    http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd 
	    http://camel.apache.org/schema/cxf
		http://camel.apache.org/schema/cxf/camel-cxf.xsd 
		http://cxf.apache.org/transports/http/configuration 
		http://cxf.apache.org/schemas/configuration/http-conf.xsd
		http://cxf.apache.org/configuration/security 
		http://cxf.apache.org/schemas/configuration/security.xsd
		http://cxf.apache.org/jaxws 
		http://cxf.apache.org/schemas/jaxws.xsd">

<context:annotation-config />
	
	<!-- define the jasypt properties parser with the given password to be used -->
	<bean id="jasypt"
		class="org.apache.camel.component.jasypt.JasyptPropertiesParser">
		<property name="password" value="sysenv:ENCRYPTION_KEY" />
		<property name="algorithm" value="PBEWITHMD5ANDTRIPLEDES" />
	</bean>

	<!-- define the camel properties component -->
	<bean id="properties"
		class="org.apache.camel.component.properties.PropertiesComponent">
		<!-- the properties file is in the classpath -->
		<property name="location" value="file:mfino_conf/mce.properties" />
		<!-- and let it leverage the jasypt parser -->
		<property name="propertiesParser" ref="jasypt" />
	</bean>

	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:mfino_conf/mce.properties</value>
			</list>
		</property>
	</bean>

	<osgi:reference id="pooledConnectionFactory" interface="javax.jms.ConnectionFactory"/>
	<bean id="jmsConfig" 
		class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="pooledConnectionFactory"/>
		<property name="concurrentConsumers" value="${concurrentConsumers}"/>
 	</bean>
 
	<bean id="jms" 
		class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="configuration" ref="jmsConfig"/>
	</bean>

	<osgi:reference id="coreDataWrapper" interface="com.mfino.mce.core.CoreDataWrapper"/>
	
	<osgi:reference id="billPaymentsService" interface="com.mfino.billpayments.service.BillPaymentsService"/>
	
	 <osgi:reference id="billPayNotificationService" interface="com.mfino.billpayments.service.BillPayNotificationService"/>
	
	<osgi:reference id="billPayMoneyTransferService" interface="com.mfino.billpayments.service.BillPayMoneyTransferService"/>
		
	<osgi:reference id="billPayBillerIntegrationService" interface="com.mfino.billpayments.service.BillPayBillerIntegrationService"/>

	<osgi:reference id="billPayEventProcessingService" interface="com.mfino.billpayments.service.BillPayEventProcessingService"/>
	
	<osgi:reference id="billPaymentsSuspenceClearanceService" interface="com.mfino.billpayments.service.BillPaymentsSuspenceClearanceService"/>

	<osgi:reference id="billPayPendingResolveService" interface="com.mfino.billpayments.service.BillPayPendingResolveService"/>
	
	<osgi:reference id="sessionFactory" interface="org.hibernate.SessionFactory"/>
	
	<osgi:reference id="txManager" interface="org.springframework.orm.hibernate4.HibernateTransactionManager" />
	
	<osgi:reference id="subscriberServiceImpl" interface="com.mfino.service.SubscriberService" />
	
	<osgi:reference id="subscriberMdnServiceImpl" interface="com.mfino.service.SubscriberMdnService" />
	
	
	<bean id="billpaymentsPendingClearanceService" class="com.mfino.billpayments.service.impl.BillpaymentsPendingClearanceServiceImpl">
		<property name="billPaymentsService" ref="billPaymentsService" />
		 		
	</bean>	
	
	<bean id="zteBillInquiry" class="com.mfino.billpayments.zte.BillInquiryProcessor">
		<property name="subscriberService" ref="subscriberServiceImpl"/>
		<property name="subscriberMdnService" ref="subscriberMdnServiceImpl"/>
 	</bean>	

	<bean id="zteBillPayInquiry" class="com.mfino.billpayments.zte.BillPayInquiryProcessor">
 	 	<property name="billPaymentsService" ref="billPaymentsService"/>
 	 	<property name="subscriberService" ref="subscriberServiceImpl"/>
		<property name="coreDataWrapper" ref="coreDataWrapper"/>
	</bean>	
	
	<bean id="zteBillPay" class="com.mfino.billpayments.zte.BillPaymentProcessor">
		<property name="subscriberService" ref="subscriberServiceImpl"/>
		<property name="subscriberMdnService" ref="subscriberMdnServiceImpl"/>
		<property name="coreDataWrapper" ref="coreDataWrapper"/>		
 	</bean>	
	
	
	<camelContext id="zteContext" xmlns="http://camel.apache.org/schema/spring" useMDCLogging="true">
	    
	    

	<!-- Starting point for quick teller bill pay integrations -->

		<route> 
			<from uri="jms:zteBillPayQueue" />
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMBillPayInquiry'</simple> <!-- Inquiry Flow -->
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferInquirySourceToSuspense"/>
				<filter>
					<simple>${body.response} is 'com.mfino.fix.CmFinoFIX$CMTransferInquiryToBank'</simple> 
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_INQ_TO_BANK</constant>        
					</setHeader>
					<multicast>
						<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
						<to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>
					</multicast>
				</filter>
				<filter>
					<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple> <!-- money transfer inquiry is completed, proceed to bill payment inquiry -->
					<filter>
					<simple>${body.response.result} == '0'</simple>
					<setHeader headerName="eventContext">
						<!-- <simple resultType="java.lang.String" >SRC_SUSPENSE_INQ_SUCCESS</simple> -->
						<constant>SRC_SUSPENSE_INQ_SUCCESS</constant> 
					</setHeader>
					<multicast>
						<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
						<to uri="jms:zteBillInquiryQueue?disableReplyTo=true"/>
					</multicast>
					</filter>
				</filter>
				<filter>
					<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple> 
					<filter>
					<simple>${body.response.result} != '0'</simple>
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_INQ_FAILED</constant>        
					</setHeader>
					<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
					</filter>
				</filter>
			</filter>
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMBillPay'</simple> <!-- Confirmation Flow -->
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferConfirmationSourceToSuspense"/>
				<filter>
					<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple>
					<filter>
						<simple>${body.response.result} == '0'</simple>
						<setHeader headerName="eventContext">
							<constant>SRC_SUSPENSE_CONFIRMATION_SUCCESS</constant>        
						</setHeader>
						<multicast>
							<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
							<to uri="jms:zteBillPayConfirmationQueue?disableReplyTo=true"/>
						</multicast>
					</filter>
				</filter>
				<filter>
					<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple> <!-- money transfer inquiry is completed, proceed to bill payment inquiry -->
					<filter>
						<simple>${body.response.result} != '0'</simple>
						<setHeader headerName="eventContext">
							<constant>SRC_SUSPENSE_CONFIRMATION_FAILED</constant>        
						</setHeader>
						<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
					</filter>
				</filter>
				<filter>
					<simple>${body.response} is 'com.mfino.fix.CmFinoFIX$CMMoneyTransferToBank'</simple> <!-- give this to front end as it needs to go to bank -->
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_CONFIRMATION_TO_BANK</constant>        
					</setHeader>
					<multicast>
						<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
						<to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>
					</multicast>					
				</filter>
			</filter>
			
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMBillPayPendingRequest'</simple> <!-- Manual pending resolve Flow -->
				<to uri="bean:billPayPendingResolveService?method=resolvePendingTransaction"/>
				<filter>
					<simple>${body.destinationQueue} == null</simple>
					<to uri="jms:notificationQueue?disableReplyTo=true"/>
				</filter>
				<filter>
					<simple>${body.destinationQueue} != null</simple>
					<filter>
						<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple>
						<filter>
							<simple>${body.response.result} != '0'</simple> <!--  transaction is resolved as failure -->
							<setHeader headerName="eventContext">
								<constant>BILLER_CONFIRMATION_FAILED</constant>        
							</setHeader>
						</filter>
					</filter>
					<filter>
						<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple> <!-- transaction is resolved as success -->
						<filter>
							<simple>${body.response.result} == '0'</simple>
							<setHeader headerName="eventContext">
								<constant>BILLER_CONFIRMATION_SUCCESSFUL</constant>        
							</setHeader>
						</filter>
					</filter>					
					<recipientList>
						<simple>${body.nextQueue},jms:billPayEventProcessingQueue?disableReplyTo=true</simple>
					</recipientList>	
				</filter>				
			</filter>			
			
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMBillInquiry'</simple> <!-- billInquiry Flow -->
				<to uri="bean:zteBillInquiry?method=constructRequestMessage"/>
				<to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>
			</filter>
			
		</route>
		
		<!-- response from front end for source to suspense-->

		<route> 
			<from uri="jms:ztebpSourceToSuspenseBRQueue"/>
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMTransferInquiryToBank'</simple>
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferInquirySourceToSuspenseCompleted"/>
				<filter>
					<simple>${body.response.result} == '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_INQ_SUCCESS</constant>        
					</setHeader>
					<multicast>
						<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
						<to uri="jms:zteBillInquiryQueue?disableReplyTo=true"/>
					</multicast>
				</filter>
				<filter>
					<simple>${body.response.result} != '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_INQ_FAILED</constant>        
					</setHeader>
					<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
			</filter>
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMMoneyTransferToBank' and {body.response} is 'com.mfino.fix.CmFinoFIX$CMMoneyTransferFromBank'</simple>
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferConfirmationSourceToSuspenseCompleted"/>
				<filter>
					<simple>${body.response.result} == '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_CONFIRMATION_SUCCESS</constant>        
					</setHeader>
					<multicast>
						<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
						<to uri="jms:zteBillPayConfirmationQueue?disableReplyTo=true"/>
					</multicast>
				</filter>
				<filter>
					<simple>${body.response.result} != '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SRC_SUSPENSE_CONFIRMATION_FAILED</constant>        
					</setHeader>
					<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
			</filter>			
		</route>

		<!-- response from front end for suspense to destination -->

		<route> 
			<from uri="jms:ztebpSuspenseToDestBRQueue"/>
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMTransferInquiryToBank'</simple>
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferInquirySuspenceToDestinationCompleted"/>
				<filter>
					<simple>${body.response.result} == '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_INQ_SUCCESS</constant>        
					</setHeader>
					<multicast>
						<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
						<to uri="direct:moneyTransferConfirmationSuspenseToDestination"/>
					</multicast>
				</filter>
				<filter>
					<simple>${body.response.result} != '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_INQ_FAILED</constant>        
					</setHeader>
					<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
			</filter>
			<filter>
				<simple>${in.body.request} is 'com.mfino.fix.CmFinoFIX$CMMoneyTransferToBank'</simple>
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferConfirmationSuspenseToDestinationCompleted"/>
				<filter>
					<simple>${body.response.result} == '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_CONFIRMATION_SUCCESS</constant>        
					</setHeader>
					<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
				<filter>
					<simple>${body.response.result} != '0'</simple> 
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_CONFIRMATION_FAILED</constant>        
					</setHeader>
					<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
			</filter>			
		</route>

		<!-- route for bill inquiry -->		
		
		<route> 
			<from uri="jms:zteBillInquiryQueue" />

			<setHeader headerName="eventContext">
				<constant>BILLER_INQUIRY_PENDING</constant>        
			</setHeader>
			<multicast>
				<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
				<to uri="direct:zteBillPayInquiryProcessorQueue"/>
			</multicast>
		</route>

		<!-- route for bill inquiry -->

		<!-- <route>
			<from uri="direct:zteBillPayInquiryProcessorQueue"/>
			<to uri="bean:zteBillPayInquiry?method=constructRequestMessage"/>
			<to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>
		</route> -->
		
		<route>
			<from uri="direct:zteBillPayInquiryProcessorQueue"/>
			<to uri="bean:zteBillPayInquiry?method=constructResponseMessage"/>
			<setHeader headerName="eventContext">
				<constant>BILLER_INQUIRY_COMPLETED</constant>        
			</setHeader>
			<multicast>
				<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
				<to uri="bean:billPayBillerIntegrationService?method=handleBillPayInquiryResponse"/>
			</multicast>
		</route>
		
		
		<!-- route for bill inquiry Response -->
		<route>
			<from uri="jms:zteBillInquiryResponseQueue"/>
			<to uri="bean:zteBillInquiry?method=constructReplyMessage"/>
			<to uri="jms:notificationQueue?disableReplyTo=true"/>
		</route>
		
		<!-- route for bill confirmation -->

		<route> 
			<from uri="jms:zteBillPayConfirmationQueue" />

			<setHeader headerName="eventContext">
				<constant>BILLER_CONFIRMATION_PENDING</constant>        
			</setHeader>
			<multicast>
				<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
				<to uri="direct:zteBillPaymentQueue"/>	
			</multicast>
		</route>

		<!-- route for bill confirmation to Zte -->

		<route>
			<from uri="direct:zteBillPaymentQueue"/>
			<to uri="bean:billPayBillerIntegrationService?method=preBillerConfirmation"/>
			<to uri="bean:zteBillPay?method=constructRequestMessage"/>
			<to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>
		</route>
		
		<!-- route for bill confirmation Response From Zte -->
		<route>
			<from uri="jms:zteBillPaymentResponseQueue"/>
			<filter>
				<simple>${body.response} is 'com.mfino.fix.CmFinoFIX$CMCommodityTransferFromOperator'</simple> 
				<to uri="bean:zteBillPay?method=constructReplyMessage"/>
					<setHeader headerName="eventContext">
						<constant>BILLER_CONFIRMATION_COMPLETED</constant>        
					</setHeader>
					<multicast>
						<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
						<to uri="direct:billPayConfirmationResponseQueue"/>
					</multicast>
			</filter>
			<filter>
				<simple>${body.response} is 'com.mfino.domain.NoISOResponseMsg'</simple> <!-- Send reversal if required-->
				<log message="mce_zte_billpay_configuration NoISOResponseMsg: Do Nothing as this request need to be processing state."/>
			</filter>
		</route>
		
		<!-- Handle bill pay confirmation response -->
		<route>
			<from uri="direct:billPayConfirmationResponseQueue"/>
			<to uri="bean:billPayBillerIntegrationService?method=handleBillPayConfirmationResponse"/>
			<filter>
				<simple>${body.response.result} == '0'</simple> <!-- check if response == CmFinoFIX.ResponseCode_Success -->
				<setHeader headerName="eventContext">
					<constant>BILLER_CONFIRMATION_SUCCESSFUL</constant>        
				</setHeader>
				<multicast>
					<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>			
					<to uri="jms:ztemoneyTransferInquirySuspenseToDestination"/>
				</multicast>
			</filter>
			<filter>
				<simple>${body.response.result} == '1'</simple> <!-- check if response == CmFinoFIX.ResponseCode_Success -->
				<!-- Amount should be reverted from suspense and charges to source and failure notification should be sent out, coming soon :) -->
				<setHeader headerName="eventContext">
					<constant>BILLER_CONFIRMATION_FAILED</constant>        
				</setHeader>
				<multicast>
					<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
					<to uri="jms:ztesuspenseAndChargesToSourceReversal"/>
				</multicast>			
			</filter>		
		</route>

		<!-- route for money transfer inquiry (suspense to destination) -->

		<route>
			<from uri="jms:ztemoneyTransferInquirySuspenseToDestination"/>
				<log message="mce_zte_billpay_configuration#ztemoneyTransferInquirySuspenseToDestination"/>
				<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferInquirySuspenseToDestination"/>
				<filter>
					<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple> 
					<filter>
						<simple>${body.response.result} == '0'</simple>
						<setHeader headerName="eventContext">
							<constant>SUSPENSE_DEST_INQ_SUCCESS</constant>        
						</setHeader>
						<multicast>
							<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
							<to uri="direct:moneyTransferConfirmationSuspenseToDestination"/>
						</multicast>
					</filter>
				</filter>
				<filter>
					<simple>${body.response} is 'com.mfino.fix.CmFinoFIX$CMTransferInquiryToBank'</simple>
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_INQ_TO_BANK</constant>        
					</setHeader>
					<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
					<to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>
				</filter>
				<!-- What if suspense to destination inquiry fails?	-->
				<filter>
					<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple> 
					<filter>
						<simple>${body.response.result} != '0'</simple>
						<setHeader headerName="eventContext">
							<constant>SUSPENSE_DEST_INQ_FAILED</constant>        
						</setHeader>
						<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
					</filter>
				</filter>
		</route>

		<!-- route for money transfer confirmation (suspense to destination) -->
		<route>
			<from uri="direct:moneyTransferConfirmationSuspenseToDestination"/>
			<to uri="bean:billPayMoneyTransferService?method=billPayMoneyTransferConfirmationSuspenseToDestination"/>
			<filter>
				<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple>
				<filter>
					<simple>${body.response.result} == '0'</simple>
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_CONFIRMATION_SUCCESS</constant>        
					</setHeader>
					<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
			</filter>
			<filter>
				<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple>
				<filter>
					<simple>${body.response.result} != '0'</simple>
					<setHeader headerName="eventContext">
						<constant>SUSPENSE_DEST_CONFIRMATION_FAILED</constant>        
					</setHeader>
					<to uri="jms:billPayEventProcessingQueue?disableReplyTo=true"/>
				</filter>
			</filter>
			<filter>
				<simple>${body.response} is 'com.mfino.fix.CmFinoFIX$CMMoneyTransferToBank'</simple>
				<setHeader headerName="eventContext">
					<constant>SUSPENSE_DEST_CONFIRMATION_TO_BANK</constant>        
				</setHeader>
				<to uri="jms:frontendRequestServiceQueue?disableReplyTo=true"/>						
			</filter>
		</route>

		<route>
			<from uri="jms:ztesuspenseAndChargesToSourceReversal"/>
			<to uri="bean:billPayMoneyTransferService?method=suspenseAndChargesToSourceReversal"/>
			<to uri="jms:autoReversalQueue?disableReplyTo=true"/>
		</route>

		<route>
			<from uri="jms:ztesuspenseAndChargesRRQueue"/>
			<log message="mce_zte_billpay_configuration#suspenseAndChargesRRQueue"/>
			<filter>
				<simple>${body.response} is 'com.mfino.mce.core.util.BackendResponse'</simple>
				<filter>
					<simple>${body.response.result} == '0'</simple>
					<to uri="jms:notificationQueue?disableReplyTo=true"/>
				</filter>
			</filter>
		</route>

		<!-- Batch process to handle failed suspense to destination transactions.-->

		<!-- <route>
			<from uri="timer://suspenceClearanceTimer?fixedRate=true&amp;period=24hours"/> 
			<log message="mce_zte_billpay_configuration#fromuri=suspenceClearanceTimer"/>
			<split>
				<method bean="billPaymentsSuspenceClearanceService" method="clearSuspenceAccounts"/> 
				<filter>
					<simple>${body.destinationQueue} != null</simple>
					<recipientList>
						<simple>${body.nextQueue}</simple>
					</recipientList>
				</filter>
			</split>
		</route>	 -->	


		 <!-- Batch process to query and resolve pending transactions -->
		<!--
		<route>
			<from uri="timer://qtPendingBillPayClearTimer?fixedRate=true&amp;period=24hours"/> 
			<log message="mce_smart_zte_billpay_configuration#fromuri=qtPendingBillPayClearTimer"/>
			<split>
				<method bean="billpaymentsPendingClearanceService" method="clearBillerConfirmationPendingTransactions"/> 
				<to uri="direct:zteQueryTransactionCommunicatorQueue"/>
			</split>
		</route>	

		<route>
			<from uri="direct:zteQueryTransactionCommunicatorQueue"/>
			<to uri="bean:qtBillPayQueryTransactionCommunicator?method=process"/>
			<to uri="direct:billPayConfirmationResponseQueue"/>
		</route> -->

		
		<!-- route for bill pay event processing queue begin 
		<route>
			<from uri="jms:billPayEventProcessingQueue"/>
			<setHeader headerName="eventContext">
				<simple>${in.header.eventContext}</simple>
			</setHeader>
			<to uri="bean:billPayEventProcessingService?method=processEvent"/>
			<filter>
				<simple>${body.response} != null</simple>
				<to uri="jms:notificationQueue?disableReplyTo=true"/>
			</filter>
		</route>	
		-->


		<!-- route for bill pay event processing queue end -->		

		<route>
			<from uri="jms:billPayEventProcessingQueue"/>
			<setHeader headerName="eventContext">
				<simple>${in.header.eventContext}</simple>
			</setHeader>
			
			<filter>
				<simple>${in.header.eventContext} == 'SRC_SUSPENSE_INQ_FAILED'</simple>
				<to uri="bean:billPayEventProcessingService?method=SRC_SUSPENSE_INQ_FAILED"/>
				<to uri="jms:notificationQueue?disableReplyTo=true"/>
			</filter>

			<filter>
				<simple>${in.header.eventContext} == 'SRC_SUSPENSE_CONFIRMATION_FAILED'</simple>
				<to uri="bean:billPayEventProcessingService?method=SRC_SUSPENSE_CONFIRMATION_FAILED"/>
				<to uri="jms:notificationQueue?disableReplyTo=true"/>
			</filter>

			<filter>
				<simple>${in.header.eventContext} == 'BILLER_INQUIRY_COMPLETED'</simple>
				<to uri="bean:billPayEventProcessingService?method=BILLER_INQUIRY_COMPLETED"/>
				<to uri="jms:notificationQueue?disableReplyTo=true"/>
			</filter>

			<filter>
				<simple>${in.header.eventContext} == 'BILLER_CONFIRMATION_FAILED'</simple>
				<to uri="bean:billPayEventProcessingService?method=BILLER_CONFIRMATION_FAILED"/>
				<to uri="jms:notificationQueue?disableReplyTo=true"/>
			</filter>

			<filter>
				<simple>${in.header.eventContext} == 'BILLER_CONFIRMATION_SUCCESSFUL'</simple>
				<to uri="bean:billPayEventProcessingService?method=BILLER_CONFIRMATION_SUCCESSFUL"/>
				<to uri="jms:notificationQueue?disableReplyTo=true"/>
				<!-- 
				<multicast>
					<to uri="jms:notificationQueue?disableReplyTo=true"/>
					<to uri="jms:notificationToDestinationQueue?disableReplyTo=true"/>
					<to uri="jms:notificationToBillerQueue?disableReplyTo=true"/>
				</multicast>
				 -->
			</filter>
		</route>
		
		<!-- notification to destination -->
		<!-- 
		<route> 
			<from uri="jms:notificationToDestinationQueue"/>
					<to uri="bean:billPayNotificationService?method=notificationToDestination"/>
					<filter>
						<simple>${body.request} is 'com.mfino.fix.CmFinoFIX$CMSMSNotification'</simple>
						<to uri="jms:notificationQueue?disableReplyTo=true"/>				
					</filter>
		</route>
		 -->
		 
		<!--notification to biller -->
		<!-- <route>
			<from uri="jms:notificationToBillerQueue"/>
				 <filter>
					<simple>${body.response.ReceiverMDN} !=null</simple>
					<to uri="bean:billPayNotificationService?method=notificationToBiller"/>
					<to uri="jms:notificationQueue?disableReplyTo=true"/>
				</filter>
		</route> -->
	</camelContext>

	<bean id="camelTracer" class="org.apache.camel.processor.interceptor.Tracer">
		<property name="traceOutExchanges" value="true" />
	</bean>

	<bean id="traceFormatter"
		class="org.apache.camel.processor.interceptor.DefaultTraceFormatter">
		<property name="showOutBody" value="true" />
		<property name="showOutBodyType" value="true" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />		
</beans>