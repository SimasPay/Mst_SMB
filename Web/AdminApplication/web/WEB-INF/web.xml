<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <display-name>mFino platform admin web application</display-name>
    <!-- to specifically stop trouble with multiple apps on tomcat -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>mfinospringsecuritywebapp_root</param-value>
    </context-param>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/applicationContext.xml
            /WEB-INF/applicationContext-security.xml
			/WEB-INF/spring-datasource-beans.xml
        </param-value>
    </context-param>
	<env-entry> 
		<description>
		environment variable for setting the war type to be used in the java code
		(ConfigurationUtil) to use the corresponding properties file.
		</description>
    	<env-entry-name>mfino.Properties</env-entry-name>
    	<env-entry-type>java.lang.String</env-entry-type> 
    	<env-entry-value>AdminApplication</env-entry-value> 
	</env-entry>
    <env-entry>
    	<description>
		environment variable for calling the jndi name from the 
		tomcat context.xml to be used in spring to access the required properties file.
		</description> 
    	<env-entry-name>databaseConfig.Properties</env-entry-name> 
    	<env-entry-type>java.lang.String</env-entry-type> 
    	<env-entry-value>java:/comp/env/mfino.AdminApplication.databaseConfig.Properties</env-entry-value> 
	</env-entry>
	
	 <!--
	  Filters and listeners for monitoring 
	  START
	 -->
	 <filter>
		<filter-name>monitoring</filter-name>
        <filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
     </filter>
     <filter-mapping>
        <filter-name>monitoring</filter-name>
        <url-pattern>/*</url-pattern>
     </filter-mapping>
     <listener>
        <listener-class>net.bull.javamelody.SessionListener</listener-class>
     </listener>
	 <!--
	    END
	  -->
	  
	   <!--
	    Security for monitoring 
	    START 
	   -->
	   <login-config>
                <auth-method>BASIC</auth-method>
                <realm-name>Monitoring</realm-name>
        </login-config>
        <security-role>
                <role-name>monitoring</role-name>
        </security-role>
        <security-constraint>
                <web-resource-collection>
                        <web-resource-name>Monitoring</web-resource-name>
                        <url-pattern>/monitoring</url-pattern>
                </web-resource-collection>
                <auth-constraint>
                        <role-name>monitoring</role-name>
                </auth-constraint>
                <!-- if SSL enabled (SSL and certificate must then be configured in the server)
                <user-data-constraint>
                        <transport-guarantee>CONFIDENTIAL</transport-guarantee>
                </user-data-constraint> 
                -->
        </security-constraint>
        
	   <!--END 
	    -->
	    
	<filter>
	  <filter-name>HibernateSession</filter-name>
	  <filter-class>
	    	org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
	  </filter-class>
	</filter>
	
	<filter-mapping>
	  <filter-name>HibernateSession</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>
		    	
    <filter>
        <filter-name>acegiAjaxFilter</filter-name>
        <filter-class>com.mfino.uicore.web.AcegiAjaxFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>acegiAjaxFilter</filter-name>
        <url-pattern>/j_spring_security_check</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>	    

    <!--
      - Loads the root application context of this web app at startup.
      - The application context is then available via
      - WebApplicationContextUtils.getWebApplicationContext(servletContext).
    -->
	<listener>
		<listener-class>
			com.mfino.web.admin.Listeners.MFinoServletContextListener</listener-class>
	</listener>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

	<listener>
	    <listener-class>com.mfino.web.admin.Listeners.MFinoHTTPSessionListener</listener-class>
	</listener>
    <listener>
        <listener-class>com.mfino.web.admin.Listeners.MFinoServletRequestListener</listener-class>
    </listener>
  <listener>
  
   <listener-class>
      org.springframework.security.web.session.HttpSessionEventPublisher
    </listener-class>

  </listener>    
  
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>*.htm</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>*.jsx</url-pattern>
    </servlet-mapping>
    <session-config>
        <session-timeout>
            10
        </session-timeout>
    </session-config>
    <welcome-file-list>
        <welcome-file>redirect.jsp</welcome-file>
    </welcome-file-list>

 <security-constraint>
                <web-resource-collection>
                        <web-resource-name>Automatic SLL Forwarding</web-resource-name>
                        <url-pattern>/*</url-pattern>
                </web-resource-collection>
                <user-data-constraint>
                  <transport-guarantee>
                        CONFIDENTIAL
                  </transport-guarantee>
                </user-data-constraint>
        </security-constraint>
 
</web-app>