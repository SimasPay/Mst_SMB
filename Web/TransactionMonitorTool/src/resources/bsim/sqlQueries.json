
{
	"TRANSACTION_SUMMARY" : "SELECT STATUS,COUNT(STATUS) FROM SERVICE_CHARGE_TXN_LOG
							 WHERE CREATETIME >= :createtime
							 GROUP BY STATUS",
	"PER_TRANSACTION" : "SELECT SCTL.STATUS,COUNT(SCTL.STATUS),TT.TRANSACTIONNAME,SCTL.TRANSACTIONTYPEID FROM SERVICE_CHARGE_TXN_LOG SCTL, TRANSACTION_TYPE TT
						WHERE SCTL.CREATETIME >= :createtime AND SCTL.TRANSACTIONTYPEID IN (4,5,6,11,13,19)
						AND TT.ID = SCTL.TRANSACTIONTYPEID AND SCTL.STATUS IN (0,1,2,3,4,5,6,16,17,18)
						GROUP BY SCTL.STATUS,TT.TRANSACTIONNAME,SCTL.TRANSACTIONTYPEID ORDER BY TT.TRANSACTIONNAME",
	"RECENT_FAILED_TRANSACTION" : "SELECT ID,SOURCEMDN,FAILUREREASON,CREATETIME,CHANNELNAME, TRANSACTIONNAME,TRANSACTIONAMOUNT,RCCODE FROM
								  (SELECT SCTL.ID ID,SCTL.SOURCEMDN SOURCEMDN,SCTL.FAILUREREASON FAILUREREASON,SCTL.CREATETIME CREATETIME,CC.CHANNELNAME CHANNELNAME, 
								  TT.TRANSACTIONNAME TRANSACTIONNAME,SCTL.TRANSACTIONAMOUNT TRANSACTIONAMOUNT,
								  COALESCE(PCT.OPERATORRESPONSECODE||'',PCT.BANKREJECTREASON,CT.OPERATORRESPONSECODE||'',CT.BANKREJECTREASON) AS RCCODE 
								  FROM SERVICE_CHARGE_TXN_LOG SCTL, PENDING_COMMODITY_TRANSFER PCT, COMMODITY_TRANSFER CT,CHANNEL_CODE CC, TRANSACTION_TYPE TT,CHARGETXN_TRANSFER_MAP CTM
								  WHERE SCTL.STATUS = :status AND SCTL.CREATETIME >= :createtime
								  AND CTM.SCTLID = SCTL.ID
								  AND PCT.ID (+)= CTM.COMMODITYTRANSFERID AND CT.ID(+) = CTM.COMMODITYTRANSFERID
								  AND CC.ID = SCTL.CHANNELCODEID AND TT.ID = SCTL.TRANSACTIONTYPEID
								  ORDER BY SCTL.ID DESC) WHERE RCCODE IS NOT NULL AND ROWNUM BETWEEN 1 AND :maxLimit",
	"PER_RC_TRANSACTION" : "SELECT * FROM
							(SELECT COALESCE(CT.OPERATORRESPONSECODE||'', CT.BANKREJECTREASON) AS RCCODE, COUNT(*) AS COUNT 
							FROM COMMODITY_TRANSFER CT WHERE CREATETIME >= :createtime  GROUP BY CT.OPERATORRESPONSECODE||'', CT.BANKREJECTREASON 
							UNION 
							SELECT COALESCE(PCT.OPERATORRESPONSECODE||'', PCT.BANKREJECTREASON) AS RCCODE, COUNT(*) AS COUNT 
							FROM PENDING_COMMODITY_TRANSFER PCT WHERE CREATETIME >= :createtime GROUP BY PCT.OPERATORRESPONSECODE||'', PCT.BANKREJECTREASON)
							WHERE  RCCODE NOT IN ('0','00')"
}