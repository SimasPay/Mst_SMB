package com.interswitchng.techquest;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.1
 * 2012-07-27T12:41:42.574+05:30
 * Generated source version: 2.6.1
 * 
 */
@WebServiceClient(name = "InterswitchServices", 
                  wsdlLocation = "file:/C:/code_new/mfs_2.6/MFS_V2_6/IntegrationTemplates/CashoutFrontend/src/main/resources/wsdl/InterswitchServices%20-%20ISO8583.wsdl",
                  targetNamespace = "http://techquest.interswitchng.com/") 
public class InterswitchServices extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://techquest.interswitchng.com/", "InterswitchServices");
    public final static QName ISO8583ServicesSoap12Endpoint = new QName("http://techquest.interswitchng.com/", "ISO8583ServicesSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/code_new/mfs_2.6/MFS_V2_6/IntegrationTemplates/CashoutFrontend/src/main/resources/wsdl/InterswitchServices%20-%20ISO8583.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(InterswitchServices.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/code_new/mfs_2.6/MFS_V2_6/IntegrationTemplates/CashoutFrontend/src/main/resources/wsdl/InterswitchServices%20-%20ISO8583.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public InterswitchServices(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public InterswitchServices(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public InterswitchServices() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns ISO8583ServicesPortType
     */
    @WebEndpoint(name = "ISO8583ServicesSoap12Endpoint")
    public ISO8583ServicesPortType getISO8583ServicesSoap12Endpoint() {
        return super.getPort(ISO8583ServicesSoap12Endpoint, ISO8583ServicesPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ISO8583ServicesPortType
     */
    @WebEndpoint(name = "ISO8583ServicesSoap12Endpoint")
    public ISO8583ServicesPortType getISO8583ServicesSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(ISO8583ServicesSoap12Endpoint, ISO8583ServicesPortType.class, features);
    }

}
