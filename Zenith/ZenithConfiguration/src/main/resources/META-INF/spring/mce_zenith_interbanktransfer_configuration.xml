<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:camel="http://camel.apache.org/schema/spring" xmlns:broker="http://activemq.apache.org/schema/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:cxf="http://camel.apache.org/schema/cxf" xmlns:osgix="http://www.springframework.org/schema/osgi-compendium"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	    http://www.springframework.org/schema/beans/spring-beans.xsd 
	    http://camel.apache.org/schema/spring  
	    http://camel.apache.org/schema/spring/camel-spring.xsd
	    http://www.springframework.org/schema/osgi   
	    http://www.springframework.org/schema/osgi/spring-osgi.xsd 
	    http://www.springframework.org/schema/osgi-compendium 
	    http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium.xsd 
	    http://www.springframework.org/schema/context 
	    http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
       	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	    http://activemq.apache.org/schema/core 
	    http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd 
	    http://camel.apache.org/schema/cxf
		http://camel.apache.org/schema/cxf/camel-cxf.xsd ">

	<context:annotation-config />
	
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-http-jetty.xml" />


	<osgi:reference id="txManager" interface="org.springframework.orm.hibernate3.HibernateTransactionManager" />

	<!-- define the jasypt properties parser with the given password to be used -->
	<bean id="jasypt"
		class="org.apache.camel.component.jasypt.JasyptPropertiesParser">
		<property name="password" value="sysenv:ENCRYPTION_KEY" />
		<property name="algorithm" value="PBEWITHMD5ANDTRIPLEDES" />
	</bean>

	<!-- define the camel properties component -->
	<bean id="properties"
		class="org.apache.camel.component.properties.PropertiesComponent">
		<!-- the properties file is in the classpath -->
		<property name="location" value="file:mfino_conf/mce.properties" />
		<!-- and let it leverage the jasypt parser -->
		<property name="propertiesParser" ref="jasypt" />
	</bean>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:mfino_conf/mce.properties</value>
			</list>
		</property>
	</bean>

	<osgi:reference id="interbankTransferService"
		interface="com.mfino.zenith.interbank.InterBankTransferService" />
	<!-- <osgi:reference id="dstvWSCommService" interface="com.mfino.zenith.dstv.WSCommunicator"/> -->


	<osgi:reference id="pooledConnectionFactory" interface="javax.jms.ConnectionFactory"/>
	<bean id="jmsConfig" 
		class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="pooledConnectionFactory"/>
		<property name="concurrentConsumers" value="${concurrentConsumers}"/>
 	</bean>
 
	<bean id="jms" 
		class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="configuration" ref="jmsConfig"/>
	</bean>

	<bean id="classBasedDynamicRouter" class="com.mfino.mce.core.routing.ClassBasedDynamicRouter">
		<constructor-arg>
			<map>
				<entry key="com.mfino.fix.CmFinoFIX$CMInterBankMoneyTransferToBank"
					value="jms:wsIBTQueue?disableReplyTo=true" />
				<entry key="com.mfino.fix.CmFinoFIX$CMInterBankFundsTransferStatus"
					value="jms:wsIBTGetTxnStatusQueue?disableReplyTo=true" />
				<!-- any backend response need to go Notification service -->
				<entry key="com.mfino.mce.core.util.BackendResponse" value="jms:notificationQueue?disableReplyTo=true" />
			</map>
		</constructor-arg>
		<!--<property name="defaultQueue" value="jms:wsIBTQueue"/> -->
	</bean>

	<cxf:cxfEndpoint id="ibtWebService"
		address="http://localhost:8080/MfinoMock/services/NibssFasterPay"
		serviceClass="com.zenithbank.nfp.NibssFasterPayPortType" endpointName="NibssFasterPayPortType" />

	<bean id="ibtWSCommService" class="com.mfino.zenith.interbank.impl.IBTWSCommunicator">
		<property name="webServiceEndpointBean" value="ibtWebService" />
	</bean>

	<bean id="ibtWSGetTransactionStatus"
		class="com.mfino.zenith.interbank.impl.IBTWSGetTransactionStatus">
		<property name="webServiceEndpointBean" value="ibtWebService" />
	</bean>

	<osgi:reference id="sessionFactory" interface="org.hibernate.SessionFactory" />
	<osgi:reference id="hibernateSessionHolder"
		interface="com.mfino.hibernate.session.HibernateSessionHolder" />

	<bean id="timeZone" class="java.util.TimeZone" factory-method="getTimeZone">
		<constructor-arg value="GMT" />
	</bean>

	<bean id="ibtPendingResolutionServiceImpl"
		class="com.mfino.zenith.interbank.impl.InterBankPendingResolutionServiceImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<camelContext id="interbanktransfer" xmlns="http://camel.apache.org/schema/spring" useMDCLogging="true">
		<threadPool id="ibtPool" threadName="IBTThread" poolSize="2"
			maxPoolSize="10" />
		<threadPool id="ibtWSPool" threadName="IBTWSThread"
			poolSize="2" maxPoolSize="10" />

		<route>
			<from uri="jms:IBTQueue?disableReplyTo=true" />
			<!-- add login to send the notification messages to notification queue -->
			<threads executorServiceRef="ibtPool">
				<to uri="bean:interbankTransferService?method=processMessage" />
				<camel:removeHeader headerName="CamelSlipEndpoint" />
				<camel:dynamicRouter>
					<method ref="classBasedDynamicRouter" method="findDestination" />
				</camel:dynamicRouter>
			</threads>
		</route>
		<route>
			<from uri="jms:wsIBTQueue?disableReplyTo=true" />
			<process ref="ibtWSCommService" />
			<to uri="jms:IBTQueue?disableReplyTo=true" />
		</route>
		<route>
			<from uri="jms:wsIBTGetTxnStatusQueue?disableReplyTo=true" />
			<process ref="ibtWSGetTransactionStatus" />
			<to uri="jms:IBTQueue?disableReplyTo=true" />
		</route>

		<route>
			<from
				uri="timer://ibtPendingResolutionTimer?fixedRate=true&amp;period=900000" />
			<process ref="ibtPendingResolutionServiceImpl" />
			<throttle timePeriodMillis="15000">
				<constant>1</constant>	      
			<filter>
				<simple>${in.body} != null</simple>
				<to uri="jms:IBTQueue?disableReplyTo=true" />
			</filter>
			</throttle>
		</route>
	</camelContext>

	<bean id="camelTracer" class="org.apache.camel.processor.interceptor.Tracer">
		<property name="traceOutExchanges" value="true" />
	</bean>

	<bean id="traceFormatter"
		class="org.apache.camel.processor.interceptor.DefaultTraceFormatter">
		<property name="showOutBody" value="true" />
		<property name="showOutBodyType" value="true" />
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />		
	
</beans>